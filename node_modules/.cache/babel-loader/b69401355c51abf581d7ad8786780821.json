{"ast":null,"code":"var _jsxFileName = \"/Users/denismyachin/Downloads/\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/online-store-master/front/src/pages/PhotoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport AlbumBar from \"../components/AlbumBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchPhoto, fetchAlbums } from \"../http/photoAPI\";\nimport Masonry from \"react-masonry-css\";\nimport './PhotoPage.css';\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoPage = observer(_c = _s(() => {\n  _s();\n\n  const {\n    photo\n  } = useContext(Context);\n  useEffect(() => {\n    fetchAlbums().then(data => photo.setAlbums(data));\n    fetchPhoto(null, 1, 100).then(data => {\n      photo.setPhotos(data.rows);\n      photo.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    if (photo.selectedAlbum === \"all\") {\n      fetchPhoto(photo.selectedAlbum.id, photo.page).then(data => {\n        photo.setPhotos(data.rows);\n        photo.setTotalCount(data.count);\n      });\n    } else {\n      fetchPhoto(photo.selectedAlbum.id, photo.page).then(data => {\n        photo.setPhotos(data.rows);\n        photo.setTotalCount(data.count);\n      });\n    }\n  }, [photo.page, photo.selectedAlbum]);\n  const breakpoints = {\n    default: 4,\n    1100: 2,\n    700: 1\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex flex-column align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(AlbumBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(SRLWrapper, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"containter_\",\n          children: /*#__PURE__*/_jsxDEV(Masonry, {\n            breakpointCols: breakpoints,\n            className: \"my-masonry-grid\",\n            columnClassName: \"my-masonry-grid_column\",\n            children: photo.photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"image_\",\n                photo: photo,\n                src: process.env.REACT_APP_API_URL + photo.img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this)\n            }, photo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"OzfubmXy3pDR6P7Qgl+zysXOLok=\"));\n_c2 = PhotoPage;\nexport default PhotoPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PhotoPage$observer\");\n$RefreshReg$(_c2, \"PhotoPage\");","map":{"version":3,"sources":["/Users/denismyachin/Downloads/проекты/online-store-master/front/src/pages/PhotoPage.js"],"names":["React","useContext","useEffect","Container","Row","Col","AlbumBar","observer","Context","fetchPhoto","fetchAlbums","Masonry","SRLWrapper","PhotoPage","photo","then","data","setAlbums","setPhotos","rows","setTotalCount","count","selectedAlbum","id","page","breakpoints","default","photos","map","process","env","REACT_APP_API_URL","img"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport AlbumBar from \"../components/AlbumBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchPhoto, fetchAlbums} from \"../http/photoAPI\";\nimport Masonry from \"react-masonry-css\";\nimport './PhotoPage.css'\nimport { SRLWrapper} from \"simple-react-lightbox\";\n\nconst PhotoPage = observer(() => {\n    const {photo} = useContext(Context);\n\n    useEffect(() => {\n        fetchAlbums().then(data => photo.setAlbums(data));\n        fetchPhoto(null, 1, 100).then(data => {\n            photo.setPhotos(data.rows);\n            photo.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(\n        () => {\n            if(photo.selectedAlbum === \"all\") {\n                    fetchPhoto(photo.selectedAlbum.id, photo.page, ).then(data => {\n                        photo.setPhotos(data.rows);\n                        photo.setTotalCount(data.count);\n                    });\n                } else {\n                    fetchPhoto(photo.selectedAlbum.id, photo.page, ).then(data => {\n                        photo.setPhotos(data.rows);\n                        photo.setTotalCount(data.count);\n                    });\n                }\n        }, [photo.page, photo.selectedAlbum]);\n\n        const breakpoints = {\n            default: 4,\n            1100: 2,\n            700: 1\n        }\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n        \n                 <Col md={12}> \n                 <Row className=\"d-flex flex-column align-items-center\">\n                 <AlbumBar/> \n                 </Row>\n                 </Col> \n          \n            <SRLWrapper>\n                <div className='containter_'>\n                <Masonry\n                        breakpointCols={breakpoints}\n                        className=\"my-masonry-grid\"\n                        columnClassName=\"my-masonry-grid_column\"\n                    >\n                    {photo.photos.map(photo =>\n                        <div key={photo.id}> \n                            <img className='image_' photo={photo} src={process.env.REACT_APP_API_URL + photo.img}/>\n                        </div>\n                    )}\n                </Masonry>\n                </div>\n            </SRLWrapper>\n            </Row>\n        </Container>\n    );\n});\n\nexport default PhotoPage;\n"]},"metadata":{},"sourceType":"module"}