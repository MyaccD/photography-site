{"ast":null,"code":"// import React, {useEffect, useState} from 'react';\n// import {\n//     Button,\n//     Col,\n//     Container,\n//     Dropdown,\n//     Form,\n//     Image,\n//     InputGroup,\n//     ListGroup,\n//     Pagination,\n//     Row\n// } from \"react-bootstrap\";\n// import CreatePhoto from \"../components/modals/CreatePhoto\";\n// import CreateAlbum from \"../components/modals/CreateAlbum\";\n// import {fetchOnePhoto, getAllPhotosInAdminPage} from \"../http/photoAPI\";\n// import {NavLink} from \"react-router-dom\";\n// import {PHOTO_EDIT_ROUTE} from \"../utils/consts\";\n// import DeleteAlbum from \"../components/modals/DeleteAlbum\";\n// const AdminPhoto = () => {\n//     const [albumVisible, setAlbumVisible] = useState(false);\n//     const [photoVisible, setPhotoVisible] = useState(false);\n//      const [deleteAlbum, setDeleteAlbum] = useState(false);\n//     const [filter, setFilter] = useState(\"Все\");\n//     const [searchService, setSearchService] = useState('');\n//     const [searchedService, setSearchedService] = useState([]);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [count, setCount] = useState(1);\n//     const [successMsg, setSuccessMsg] = useState('');\n//     const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n//     //pagination\n//     const limit = 5;\n//     const pageCount = Math.ceil(Number(count) / limit);\n//     const pages = [];\n//     for (let number = 1; number < pageCount + 1; number++) {\n//         pages.push(\n//             <Pagination.Item key={number} active={number === currentPage} onClick={() => setCurrentPage(number)}>\n//                 {number}\n//             </Pagination.Item>\n//         );\n//     }\n//     useEffect(() => {\n//         getAllPhotosInAdminPage(currentPage, filter).then(({count, rows}) => {\n//             setSearchedService(rows);\n//             setCount(count)\n//         })\n//     }, [currentPage])\n//     useEffect(() => {\n//         getAllPhotosInAdminPage(1, filter).then(({count, rows}) => {\n//             setSearchedService(rows);\n//             setCount(count);\n//             setCurrentPage(1);\n//         })\n//     }, [filter, successMsg])\n//     const fetchPhoto = () => {\n//         getAllPhotosInAdminPage(currentPage, filter).then(({count, rows}) => {\n//             setSearchedService(rows);\n//             setCount(count)\n//         })\n//     };\n//     const showSuccessMsgFunc = (msg) => {\n//         setSuccessMsg(msg);\n//         setShowSuccessMsg(true);\n//         setTimeout(() => setShowSuccessMsg(false), 5000);\n//     }\n//     return (\n//         <Container className=\"d-flex flex-column mt-3\">\n//             {showSuccessMsg && <Row className='d-flex, align-items-center justify-content-center'><div style={{background: '#28a745', marginLeft: 15, borderRadius: 5, color: 'white', padding: 6}}>\n//                 {successMsg}\n//             </div>\n//             </Row>}\n//             <Row>\n//                 <Col md={2}>\n//                         <Button\n//                             onClick={() => setAlbumVisible(true)}\n//                             variant=\"outline-success\"\n//                             className=\"mt-3 p-2\"\n//                             >\n//                             Добавить альбом\n//                         </Button>\n//                         <Button\n//                             onClick={() => setDeleteAlbum(true)}\n//                             variant=\"outline-danger\"\n//                             className=\"mt-2 p-2\"\n//                         >\n//                             Удалить альбом\n//                         </Button>\n//                         <Button\n//                             onClick={() => setPhotoVisible(true)}\n//                             variant=\"outline-dark\"\n//                             className=\"mt-2 p-2\"\n//                         >\n//                         Добавить фото\n//                         </Button>\n//                         <CreatePhoto show={photoVisible} onHide={() => setPhotoVisible(false)}/>\n//                         <CreateAlbum show={albumVisible} onHide={() => setAlbumVisible(false)}/>\n//                         <DeleteAlbum show={deleteAlbum} onHide={() => setDeleteAlbum(false)} showSuccessMsgFunc={showSuccessMsgFunc}/>\n//                 </Col>\n//                 <Col md={10}>\n//                     <Dropdown className=\"mt-3 mb-3\" style={{margin: \"0 auto\"}}>\n//                         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n//                             {filter}\n//                         </Dropdown.Toggle>\n//                         <Dropdown.Menu>\n//                             {filter === \"Все\" ? <Dropdown.Item disabled>Все</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Все\")}>Все</Dropdown.Item>}\n//                             {filter === \"Без типа\" ? <Dropdown.Item disabled>Без типа</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Без типа\")}>Без типа</Dropdown.Item>}\n//                         </Dropdown.Menu>\n//                     </Dropdown>\n//                     <ListGroup>\n//                         {searchedService && searchedService.map( ({id, img, album}) => {\n//                             return (\n//                                 <ListGroup.Item className=\"mt-3\" key={id}>\n//                                     <Row>\n//                                         <Col xs={2}>\n//                                             <Image width={140} src={process.env.REACT_APP_API_URL + img}/>\n//                                         </Col>\n//                                         <Col xs={8}>\n//                                             <Row>\n//                                                 <Col xs={12}>\n//                                                     <NavLink to={PHOTO_EDIT_ROUTE + `/${id}`}>id: {id}</NavLink>\n//                                                 </Col>\n//                                             </Row>\n//                                             <Row>\n//                                                 <Col xs={12}>\n//                                                     Альбом: {album.name}\n//                                                 </Col>\n//                                             </Row>\n//                                         </Col>\n//                                         <Col xs={2}>\n//                                             <NavLink to={PHOTO_EDIT_ROUTE + `/${id}`}>Редактировать</NavLink>\n//                                         </Col>\n//                                     </Row>\n//                                 </ListGroup.Item>\n//                             )\n//                         })}\n//                     </ListGroup>\n//                     <Pagination size=\"sm\" className=\"mt-4 mb-4\" style={{margin: \"0 auto\"}}>\n//                         {searchedService && searchedService.length > 0 ? pages : false}\n//                     </Pagination>\n//                 </Col>\n//             </Row>\n//         </Container>\n//     );\n// };\n// export default AdminPhoto;","map":{"version":3,"sources":["/Users/denismyachin/Downloads/проекты/online-store-master/front/src/pages/AdminPhoto.js"],"names":[],"mappingssourcesContent":["// import React, {useEffect, useState} from 'react';\n// import {\n//     Button,\n//     Col,\n//     Container,\n//     Dropdown,\n//     Form,\n//     Image,\n//     InputGroup,\n//     ListGroup,\n//     Pagination,\n//     Row\n// } from \"react-bootstrap\";\n\n// import CreatePhoto from \"../components/modals/CreatePhoto\";\n// import CreateAlbum from \"../components/modals/CreateAlbum\";\n// import {fetchOnePhoto, getAllPhotosInAdminPage} from \"../http/photoAPI\";\n// import {NavLink} from \"react-router-dom\";\n// import {PHOTO_EDIT_ROUTE} from \"../utils/consts\";\n// import DeleteAlbum from \"../components/modals/DeleteAlbum\";\n\n// const AdminPhoto = () => {\n//     const [albumVisible, setAlbumVisible] = useState(false);\n//     const [photoVisible, setPhotoVisible] = useState(false);\n//      const [deleteAlbum, setDeleteAlbum] = useState(false);\n//     const [filter, setFilter] = useState(\"Все\");\n//     const [searchService, setSearchService] = useState('');\n//     const [searchedService, setSearchedService] = useState([]);\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [count, setCount] = useState(1);\n//     const [successMsg, setSuccessMsg] = useState('');\n//     const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n\n\n//     //pagination\n//     const limit = 5;\n//     const pageCount = Math.ceil(Number(count) / limit);\n//     const pages = [];\n//     for (let number = 1; number < pageCount + 1; number++) {\n//         pages.push(\n//             <Pagination.Item key={number} active={number === currentPage} onClick={() => setCurrentPage(number)}>\n//                 {number}\n//             </Pagination.Item>\n//         );\n//     }\n\n//     useEffect(() => {\n//         getAllPhotosInAdminPage(currentPage, filter).then(({count, rows}) => {\n//             setSearchedService(rows);\n//             setCount(count)\n//         })\n//     }, [currentPage])\n\n//     useEffect(() => {\n//         getAllPhotosInAdminPage(1, filter).then(({count, rows}) => {\n//             setSearchedService(rows);\n//             setCount(count);\n//             setCurrentPage(1);\n//         })\n//     }, [filter, successMsg])\n\n\n//     const fetchPhoto = () => {\n//         getAllPhotosInAdminPage(currentPage, filter).then(({count, rows}) => {\n//             setSearchedService(rows);\n//             setCount(count)\n//         })\n//     };\n\n//     const showSuccessMsgFunc = (msg) => {\n//         setSuccessMsg(msg);\n//         setShowSuccessMsg(true);\n//         setTimeout(() => setShowSuccessMsg(false), 5000);\n//     }\n\n//     return (\n//         <Container className=\"d-flex flex-column mt-3\">\n//             {showSuccessMsg && <Row className='d-flex, align-items-center justify-content-center'><div style={{background: '#28a745', marginLeft: 15, borderRadius: 5, color: 'white', padding: 6}}>\n//                 {successMsg}\n//             </div>\n//             </Row>}\n//             <Row>\n//                 <Col md={2}>\n//                         <Button\n//                             onClick={() => setAlbumVisible(true)}\n//                             variant=\"outline-success\"\n//                             className=\"mt-3 p-2\"\n//                             >\n//                             Добавить альбом\n//                         </Button>\n//                         <Button\n//                             onClick={() => setDeleteAlbum(true)}\n//                             variant=\"outline-danger\"\n//                             className=\"mt-2 p-2\"\n//                         >\n//                             Удалить альбом\n//                         </Button>\n//                         <Button\n//                             onClick={() => setPhotoVisible(true)}\n//                             variant=\"outline-dark\"\n//                             className=\"mt-2 p-2\"\n\n//                         >\n//                         Добавить фото\n//                         </Button>\n//                         <CreatePhoto show={photoVisible} onHide={() => setPhotoVisible(false)}/>\n//                         <CreateAlbum show={albumVisible} onHide={() => setAlbumVisible(false)}/>\n//                         <DeleteAlbum show={deleteAlbum} onHide={() => setDeleteAlbum(false)} showSuccessMsgFunc={showSuccessMsgFunc}/>\n//                 </Col>\n//                 <Col md={10}>\n//                     <Dropdown className=\"mt-3 mb-3\" style={{margin: \"0 auto\"}}>\n//                         <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n//                             {filter}\n//                         </Dropdown.Toggle>\n\n//                         <Dropdown.Menu>\n//                             {filter === \"Все\" ? <Dropdown.Item disabled>Все</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Все\")}>Все</Dropdown.Item>}\n//                             {filter === \"Без типа\" ? <Dropdown.Item disabled>Без типа</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Без типа\")}>Без типа</Dropdown.Item>}\n//                         </Dropdown.Menu>\n//                     </Dropdown>\n\n\n//                     <ListGroup>\n//                         {searchedService && searchedService.map( ({id, img, album}) => {\n//                             return (\n//                                 <ListGroup.Item className=\"mt-3\" key={id}>\n//                                     <Row>\n//                                         <Col xs={2}>\n//                                             <Image width={140} src={process.env.REACT_APP_API_URL + img}/>\n//                                         </Col>\n//                                         <Col xs={8}>\n//                                             <Row>\n//                                                 <Col xs={12}>\n//                                                     <NavLink to={PHOTO_EDIT_ROUTE + `/${id}`}>id: {id}</NavLink>\n//                                                 </Col>\n//                                             </Row>\n\n//                                             <Row>\n//                                                 <Col xs={12}>\n//                                                     Альбом: {album.name}\n//                                                 </Col>\n//                                             </Row>\n//                                         </Col>\n//                                         <Col xs={2}>\n//                                             <NavLink to={PHOTO_EDIT_ROUTE + `/${id}`}>Редактировать</NavLink>\n//                                         </Col>\n//                                     </Row>\n//                                 </ListGroup.Item>\n//                             )\n//                         })}\n//                     </ListGroup>\n\n//                     <Pagination size=\"sm\" className=\"mt-4 mb-4\" style={{margin: \"0 auto\"}}>\n//                         {searchedService && searchedService.length > 0 ? pages : false}\n//                     </Pagination>\n//                 </Col>\n//             </Row>\n//         </Container>\n//     );\n// };\n\n// export default AdminPhoto;\n"]},"metadata":{},"sourceType":"module"}