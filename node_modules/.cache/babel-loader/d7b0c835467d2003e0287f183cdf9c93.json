{"ast":null,"code":"// import React, {useEffect, useState} from 'react';\n// import {Button, Dropdown, Modal} from \"react-bootstrap\";\n// import {deleteType, fetchTypes} from \"../../http/seviceAPI\";\n//\n// const DeleteBrandOrType = ({show, onHide, showSuccessMsgFunc}) => {\n//     const [brandOrType, setBrandOrType] = useState(\"Brand\");\n//    const [types, setTypes] = useState([]);\n//    const [selectType, setSelectType] = useState({name: \"A type not selected\"});\n//    const [showMsgErr, setShowMsgErr] = useState(false);\n//    const [msgErr, setMsgErr] = useState('');\n//\n//    useEffect(() => {\n//\n//         fetchTypes().then(data => setTypes(data));\n//     }, []);\n//\n//     const Delete = async () => {\n//         if(brandOrType === \"Type\") {\n//             if(selectType.name !== \"A Type not selected\") {\n//                 await deleteType(selectType.id).then(data => {\n//                     showSuccessMsgFunc(data);\n//                     onHide();\n//                     setSelectType({name: \"A Type not selected\"});\n//                 });\n//             } else {\n//                 setMsgErr(\"Please choose Type\");\n//                 setShowMsgErr(true);\n//             }\n//         }\n//     };\n//\n//    useEffect(() => setShowMsgErr(false), [selectType, brandOrType])\n//\n//     return (\n//         <Modal\n//             show={show}\n//             onHide={onHide}\n//             size=\"lg\"\n//             centered\n//         >\n//             <Modal.Header closeButton>\n//                 <Modal.Title>\n//                    Delete Type or Brand\n//                 </Modal.Title>\n//             </Modal.Header>\n//             <Modal.Body>\n//                 {showMsgErr &&\n//                     <>\n//                         <p style={{color: \"red\", textAlign: \"center\"}}>{msgErr}</p>\n//                     </>\n//                 }\n//\n//                 Choose Category:\n//                 <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n//                     <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n//                        {brandOrType}\n//                     </Dropdown.Toggle>\n//\n//                     <Dropdown.Menu>\n//                        {brandOrType === \"Type\" ? <Dropdown.Item disabled>Type</Dropdown.Item> : <Dropdown.Item onClick={() => setBrandOrType(\"Type\")}>Type</Dropdown.Item>}\n//                     </Dropdown.Menu>\n//                 </Dropdown>\n//\n//                 Choose item of {brandOrType ===  \"Type\"}\n//                 {/*Choose item of {brandOrType === \"Brand\" ? \"Brand\" : \"Type\"}*/}\n//                 <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n//                     <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n//                         {brandOrType === \"Type\" === selectType.name}\n//                     </Dropdown.Toggle>\n//\n//                     <Dropdown.Menu>\n//                         {brandOrType === \"Type\" ===\n//                             types.map(({id, name}) =>\n//                                 selectType.name === name ? <Dropdown.Item disabled  key={id}>{name}</Dropdown.Item> : <Dropdown.Item  key={id} onClick={() => setSelectType({id, name})}>{name}</Dropdown.Item>\n//                             )\n//                         }\n//\n//                     </Dropdown.Menu>\n//                 </Dropdown>\n//\n//\n//             </Modal.Body>\n//             <Modal.Footer>\n//                 <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\n//                 <Button variant=\"outline-success\" onClick={Delete}>Delete</Button>\n//             </Modal.Footer>\n//         </Modal>\n//     );\n// };\n//\n// export default DeleteBrandOrType;","map":{"version":3,"sources":["/Users/denismyachin/Downloads/online-store-master/front/src/components/modals/DeleteBrandOrType.js"],"names":[],"mappings":"AAAC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":[" // import React, {useEffect, useState} from 'react';\n // import {Button, Dropdown, Modal} from \"react-bootstrap\";\n // import {deleteType, fetchTypes} from \"../../http/seviceAPI\";\n //\n // const DeleteBrandOrType = ({show, onHide, showSuccessMsgFunc}) => {\n //     const [brandOrType, setBrandOrType] = useState(\"Brand\");\n //    const [types, setTypes] = useState([]);\n //    const [selectType, setSelectType] = useState({name: \"A type not selected\"});\n //    const [showMsgErr, setShowMsgErr] = useState(false);\n //    const [msgErr, setMsgErr] = useState('');\n //\n //    useEffect(() => {\n //\n //         fetchTypes().then(data => setTypes(data));\n //     }, []);\n //\n //     const Delete = async () => {\n //         if(brandOrType === \"Type\") {\n //             if(selectType.name !== \"A Type not selected\") {\n //                 await deleteType(selectType.id).then(data => {\n //                     showSuccessMsgFunc(data);\n //                     onHide();\n //                     setSelectType({name: \"A Type not selected\"});\n //                 });\n //             } else {\n //                 setMsgErr(\"Please choose Type\");\n //                 setShowMsgErr(true);\n //             }\n //         }\n //     };\n //\n //    useEffect(() => setShowMsgErr(false), [selectType, brandOrType])\n //\n //     return (\n //         <Modal\n //             show={show}\n //             onHide={onHide}\n //             size=\"lg\"\n //             centered\n //         >\n //             <Modal.Header closeButton>\n //                 <Modal.Title>\n //                    Delete Type or Brand\n //                 </Modal.Title>\n //             </Modal.Header>\n //             <Modal.Body>\n //                 {showMsgErr &&\n //                     <>\n //                         <p style={{color: \"red\", textAlign: \"center\"}}>{msgErr}</p>\n //                     </>\n //                 }\n //\n //                 Choose Category:\n //                 <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n //                     <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n //                        {brandOrType}\n //                     </Dropdown.Toggle>\n //\n //                     <Dropdown.Menu>\n //                        {brandOrType === \"Type\" ? <Dropdown.Item disabled>Type</Dropdown.Item> : <Dropdown.Item onClick={() => setBrandOrType(\"Type\")}>Type</Dropdown.Item>}\n //                     </Dropdown.Menu>\n //                 </Dropdown>\n //\n //                 Choose item of {brandOrType ===  \"Type\"}\n //                 {/*Choose item of {brandOrType === \"Brand\" ? \"Brand\" : \"Type\"}*/}\n //                 <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n //                     <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n //                         {brandOrType === \"Type\" === selectType.name}\n //                     </Dropdown.Toggle>\n //\n //                     <Dropdown.Menu>\n //                         {brandOrType === \"Type\" ===\n //                             types.map(({id, name}) =>\n //                                 selectType.name === name ? <Dropdown.Item disabled  key={id}>{name}</Dropdown.Item> : <Dropdown.Item  key={id} onClick={() => setSelectType({id, name})}>{name}</Dropdown.Item>\n //                             )\n //                         }\n //\n //                     </Dropdown.Menu>\n //                 </Dropdown>\n //\n //\n //             </Modal.Body>\n //             <Modal.Footer>\n //                 <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\n //                 <Button variant=\"outline-success\" onClick={Delete}>Delete</Button>\n //             </Modal.Footer>\n //         </Modal>\n //     );\n // };\n //\n // export default DeleteBrandOrType;\n"]},"metadata":{},"sourceType":"module"}