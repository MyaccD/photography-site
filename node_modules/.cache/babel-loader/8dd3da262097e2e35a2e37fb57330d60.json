{"ast":null,"code":"var _jsxFileName = \"/Users/denismyachin/Downloads/online-store-master/front/src/pages/Admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Dropdown, Form, Image, InputGroup, ListGroup, Pagination, Row } from \"react-bootstrap\";\nimport CreateDevice from \"../components/modals/CreateDevice\";\nimport CreateBrand from \"../components/modals/CreateBrand\";\nimport CreateType from \"../components/modals/CreateType\";\nimport { getAllDevicesInAdminPage } from \"../http/deviceAPI\";\nimport { NavLink } from \"react-router-dom\";\nimport { DEVICE_EDIT_ROUTE } from \"../utils/consts\";\nimport DeleteBrandOrType from \"../components/modals/DeleteBrandOrType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  const [typeVisible, setTypeVisible] = useState(false);\n  const [deviceVisible, setDeviceVisible] = useState(false); // const [deleteBrandOrType, setDeleteBrandOrType] = useState(false);\n\n  const [searchDevice, setSearchDevice] = useState('');\n  const [searchedDevice, setSearchedDevice] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [count, setCount] = useState(1);\n  const [successMsg, setSuccessMsg] = useState('');\n  const [showSuccessMsg, setShowSuccessMsg] = useState(false); //pagination\n\n  const limit = 5;\n  const pageCount = Math.ceil(Number(count) / limit);\n  const pages = [];\n\n  for (let number = 1; number < pageCount + 1; number++) {\n    pages.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      active: number === currentPage,\n      onClick: () => setCurrentPage(number),\n      children: number\n    }, number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this));\n  }\n\n  useEffect(() => {\n    getAllDevicesInAdminPage(searchDevice, currentPage, filter).then(({\n      count,\n      rows\n    }) => {\n      setSearchedDevice(rows);\n      setCount(count);\n    });\n  }, [currentPage]);\n  useEffect(() => {\n    getAllDevicesInAdminPage(searchDevice, 1, filter).then(({\n      count,\n      rows\n    }) => {\n      setSearchedDevice(rows);\n      setCount(count);\n      setCurrentPage(1);\n    });\n  }, [filter, successMsg]);\n\n  const fetchDevice = () => {\n    getAllDevicesInAdminPage(searchDevice, currentPage, filter).then(({\n      count,\n      rows\n    }) => {\n      setSearchedDevice(rows);\n      setCount(count);\n    });\n  };\n\n  const showSuccessMsgFunc = msg => {\n    setSuccessMsg(msg);\n    setShowSuccessMsg(true);\n    setTimeout(() => setShowSuccessMsg(false), 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column\",\n    children: [showSuccessMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: successMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setTypeVisible(true),\n      variant: \"outline-dark\",\n      className: \"mt-4 p-2\",\n      children: \"Add type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setDeviceVisible(true),\n      variant: \"outline-dark\",\n      className: \"mt-4 p-2\",\n      children: \"Add device\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateDevice, {\n      show: deviceVisible,\n      onHide: () => setDeviceVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateType, {\n      show: typeVisible,\n      onHide: () => setTypeVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      className: \"mt-5 mb-3\",\n      style: {\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"success\",\n        id: \"dropdown-basic\",\n        children: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: [filter === \"All\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          disabled: true,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => setFilter(\"All\"),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 87\n        }, this), filter === \"Without Brand or Type\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          disabled: true,\n          children: \"Without Brand or Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 59\n        }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          onClick: () => setFilter(\"Without Brand or Type\"),\n          children: \"Without Brand or Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 123\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        \"aria-label\": \"Default\",\n        \"aria-describedby\": \"inputGroup-sizing-default\",\n        value: searchDevice,\n        onChange: e => setSearchDevice(e.target.value),\n        placeholder: \"Input device name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: fetchDevice,\n        variant: \"outline-dark\",\n        className: \"ml-2\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: searchedDevice && searchedDevice.map(({\n        id,\n        img,\n        type,\n        price,\n        name\n      }) => {\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                width: 150,\n                src: process.env.REACT_APP_API_URL + img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 8,\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(NavLink, {\n                    to: DEVICE_EDIT_ROUTE + `/${id}`,\n                    children: [\"id: \", id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: [\"Name: \", name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: [\"Price: \", price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: [\"Type: \", type.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                to: DEVICE_EDIT_ROUTE + `/${id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      size: \"sm\",\n      className: \"mt-4 mb-4\",\n      style: {\n        margin: \"0 auto\"\n      },\n      children: searchedDevice && searchedDevice.length > 0 ? pages : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Admin, \"ZTXE/SQXBkSf8Lvzuzr1AX22Zjk=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/denismyachin/Downloads/online-store-master/front/src/pages/Admin.js"],"names":["React","useEffect","useState","Button","Col","Container","Dropdown","Form","Image","InputGroup","ListGroup","Pagination","Row","CreateDevice","CreateBrand","CreateType","getAllDevicesInAdminPage","NavLink","DEVICE_EDIT_ROUTE","DeleteBrandOrType","Admin","typeVisible","setTypeVisible","deviceVisible","setDeviceVisible","searchDevice","setSearchDevice","searchedDevice","setSearchedDevice","filter","setFilter","currentPage","setCurrentPage","count","setCount","successMsg","setSuccessMsg","showSuccessMsg","setShowSuccessMsg","limit","pageCount","Math","ceil","Number","pages","number","push","then","rows","fetchDevice","showSuccessMsgFunc","msg","setTimeout","margin","e","target","value","map","id","img","type","price","name","process","env","REACT_APP_API_URL","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {\n    Button,\n    Col,\n    Container,\n    Dropdown,\n    Form,\n    Image,\n    InputGroup,\n    ListGroup,\n    Pagination,\n    Row\n} from \"react-bootstrap\";\n\nimport CreateDevice from \"../components/modals/CreateDevice\";\nimport CreateBrand from \"../components/modals/CreateBrand\";\nimport CreateType from \"../components/modals/CreateType\";\nimport {getAllDevicesInAdminPage} from \"../http/deviceAPI\";\nimport {NavLink} from \"react-router-dom\";\nimport {DEVICE_EDIT_ROUTE} from \"../utils/consts\";\nimport DeleteBrandOrType from \"../components/modals/DeleteBrandOrType\";\n\nconst Admin = () => {\n    const [typeVisible, setTypeVisible] = useState(false);\n    const [deviceVisible, setDeviceVisible] = useState(false);\n    // const [deleteBrandOrType, setDeleteBrandOrType] = useState(false);\n\n    const [searchDevice, setSearchDevice] = useState('');\n    const [searchedDevice, setSearchedDevice] = useState([]);\n    const [filter, setFilter] = useState(\"All\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [count, setCount] = useState(1);\n\n    const [successMsg, setSuccessMsg] = useState('');\n    const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n\n    //pagination\n    const limit = 5;\n    const pageCount = Math.ceil(Number(count) / limit);\n    const pages = [];\n    for (let number = 1; number < pageCount + 1; number++) {\n        pages.push(\n            <Pagination.Item key={number} active={number === currentPage} onClick={() => setCurrentPage(number)}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n\n\n    useEffect(() => {\n        getAllDevicesInAdminPage(searchDevice, currentPage, filter).then(({count, rows}) => {\n            setSearchedDevice(rows);\n            setCount(count)\n        })\n    }, [currentPage])\n\n    useEffect(() => {\n        getAllDevicesInAdminPage(searchDevice, 1, filter).then(({count, rows}) => {\n            setSearchedDevice(rows);\n            setCount(count);\n            setCurrentPage(1);\n        })\n    }, [filter, successMsg])\n\n\n    const fetchDevice = () => {\n        getAllDevicesInAdminPage(searchDevice, currentPage, filter).then(({count, rows}) => {\n            setSearchedDevice(rows);\n            setCount(count)\n        })\n    };\n\n    const showSuccessMsgFunc = (msg) => {\n        setSuccessMsg(msg);\n        setShowSuccessMsg(true);\n        setTimeout(() => setShowSuccessMsg(false), 5000);\n    }\n\n    return (\n        <Container className=\"d-flex flex-column\">\n            {showSuccessMsg && <p>{successMsg}</p>}\n            <Button\n                onClick={() => setTypeVisible(true)}\n                variant=\"outline-dark\"\n                className=\"mt-4 p-2\"\n            >\n                Add type\n            </Button>\n            <Button\n                onClick={() => setDeviceVisible(true)}\n                variant=\"outline-dark\"\n                className=\"mt-4 p-2\"\n            >\n                Add device\n            </Button>\n            {/*<Button*/}\n            {/*    onClick={() => setDeleteBrandOrType(true)}*/}\n            {/*    variant=\"outline-dark\"*/}\n            {/*    className=\"mt-4 p-2\"*/}\n            {/*>*/}\n            {/*    Delete type of brand*/}\n            {/*</Button>*/}\n            <CreateDevice show={deviceVisible} onHide={() => setDeviceVisible(false)}/>\n            <CreateType show={typeVisible} onHide={() => setTypeVisible(false)}/>\n            {/*<DeleteBrandOrType show={deleteBrandOrType} onHide={() => setDeleteBrandOrType(false)} showSuccessMsgFunc={showSuccessMsgFunccessMsgFunc}/>*/}\n\n            <Dropdown className=\"mt-5 mb-3\" style={{margin: \"0 auto\"}}>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    {filter}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    {filter === \"All\" ? <Dropdown.Item disabled>All</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"All\")}>All</Dropdown.Item>}\n                    {filter === \"Without Brand or Type\" ? <Dropdown.Item disabled>Without Brand or Type</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Without Brand or Type\")}>Without Brand or Type</Dropdown.Item>}\n                </Dropdown.Menu>\n            </Dropdown>\n\n            <InputGroup className=\"mb-3\">\n                <Form.Control\n                    aria-label=\"Default\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                    value={searchDevice}\n                    onChange={e => setSearchDevice(e.target.value)}\n                    placeholder=\"Input device name...\"\n                />\n                <Button\n                    onClick={fetchDevice}\n                    variant=\"outline-dark\"\n                    className=\"ml-2\"\n                >\n                    Search\n                </Button>\n            </InputGroup>\n\n            <ListGroup>\n                {searchedDevice && searchedDevice.map( ({id, img, type, price, name}) => {\n                    return (\n                        <ListGroup.Item className=\"mt-3\" key={id}>\n                            <Row>\n                                <Col xs={2}>\n                                    <Image width={150} src={process.env.REACT_APP_API_URL + img}/>\n                                </Col>\n                                <Col xs={8}>\n                                    <Row>\n                                        <Col xs={12}>\n                                            <NavLink to={DEVICE_EDIT_ROUTE + `/${id}`}>id: {id}</NavLink>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col xs={12}>\n                                            Name: {name}\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col xs={12}>\n                                            Price: {price}\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col xs={12}>\n                                            Type: {type.name}\n                                        </Col>\n                                    </Row>\n                                </Col>\n                                <Col xs={2}>\n                                    <NavLink to={DEVICE_EDIT_ROUTE + `/${id}`}>Edit</NavLink>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    )\n                })}\n            </ListGroup>\n\n            <Pagination size=\"sm\" className=\"mt-4 mb-4\" style={{margin: \"0 auto\"}}>\n                {searchedDevice && searchedDevice.length > 0 ? pages : false}\n            </Pagination>\n        </Container>\n    );\n};\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}