{"ast":null,"code":"var _jsxFileName = \"/Users/denismyachin/Downloads/online-store-master/front/src/pages/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport ServiceList from \"../components/ServiceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchService, fetchTypes } from \"../http/serviceAPI\";\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = observer(_c = _s(() => {\n  _s();\n\n  const {\n    service\n  } = useContext(Context);\n  const [showMsg, setShowMsg] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    fetchTypes().then(data => service.setTypes(data));\n    fetchService(null, 1, 3).then(data => {\n      service.setServices(data.rows);\n      service.setTotalCount(data.count);\n    });\n  }, []);\n  useEffect(() => {\n    if (service.selectedType === \"all\") {\n      fetchService(service.selectedType.id, service.page, 9).then(data => {\n        service.setServices(data.rows);\n        service.setTotalCount(data.count);\n      });\n    } else {\n      fetchService(service.selectedType.id, service.page, 3).then(data => {\n        service.setServices(data.rows);\n        service.setTotalCount(data.count);\n      });\n    }\n  }, [service.page, service.selectedType]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [showMsg && /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          borderBottom: 'solid',\n          borderBottomColor: '#28a745'\n        },\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(TypeBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 10,\n        children: [/*#__PURE__*/_jsxDEV(ServiceList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}, \"+7y46JVNj49V+FpVn+cbiSSCEWc=\"));\n_c2 = Shop;\nexport default Shop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Shop$observer\");\n$RefreshReg$(_c2, \"Shop\");","map":{"version":3,"sources":["/Users/denismyachin/Downloads/online-store-master/front/src/pages/Shop.js"],"names":["React","useContext","useEffect","useState","Col","Container","Row","TypeBar","ServiceList","observer","Context","fetchService","fetchTypes","Pages","Shop","service","showMsg","setShowMsg","msg","setMsg","show","setShow","then","data","setTypes","setServices","rows","setTotalCount","count","selectedType","id","page","borderBottom","borderBottomColor"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport ServiceList from \"../components/ServiceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchService, fetchTypes} from \"../http/serviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {service} = useContext(Context);\n\n    const [showMsg, setShowMsg] = useState(false);\n    const [msg, setMsg] = useState(\"\");\n    const [show, setShow] = useState(false);\n\n    useEffect(() => {\n        fetchTypes().then(data => service.setTypes(data));\n        fetchService(null, 1, 3).then(data => {\n            service.setServices(data.rows);\n            service.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(\n        () => {\n            if(service.selectedType === \"all\") {\n                    fetchService(service.selectedType.id, service.page, 9).then(data => {\n                        service.setServices(data.rows);\n                        service.setTotalCount(data.count);\n                    });\n                } else {\n                    fetchService(service.selectedType.id, service.page, 3).then(data => {\n                        service.setServices(data.rows);\n                        service.setTotalCount(data.count);\n                    });\n                }\n        }, [service.page, service.selectedType]);\n\n    return (\n        <Container>\n            {showMsg && <Row><div style={{borderBottom: 'solid', borderBottomColor: '#28a745'}}>\n                {msg}\n            </div>\n            </Row>}\n\n            <Row className=\"mt-3\">\n                <Col md={2}>\n                    <TypeBar/>\n                </Col>\n                <Col md={10}>\n                    <ServiceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}