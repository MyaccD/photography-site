{"ast":null,"code":"var _jsxFileName = \"/Users/denismyachin/Downloads/online-store-master/front/src/components/modals/DeleteBrandOrType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Dropdown, Modal } from \"react-bootstrap\";\nimport { deleteType, fetchTypes } from \"../../http/serviceAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DeleteBrandOrType = ({\n  show,\n  onHide,\n  showSuccessMsgFunc\n}) => {\n  _s();\n\n  const [brandOrType, setBrandOrType] = useState(\"Тип\");\n  const [types, setTypes] = useState([]);\n  const [selectType, setSelectType] = useState({\n    name: \"A type not selected\"\n  });\n  const [showMsgErr, setShowMsgErr] = useState(false);\n  const [msgErr, setMsgErr] = useState('');\n  useEffect(() => {\n    fetchTypes().then(data => setTypes(data));\n  }, []);\n\n  const Delete = async () => {\n    if (brandOrType === \"Тип\") {\n      if (selectType.name !== \"A Type not selected\") {\n        await deleteType(selectType.id).then(data => {\n          showSuccessMsgFunc(data);\n          onHide();\n          setSelectType({\n            name: \"A Type not selected\"\n          });\n        });\n      } else {\n        setMsgErr(\"Please choose Type\");\n        setShowMsgErr(true);\n      }\n    }\n  };\n\n  useEffect(() => setShowMsgErr(false), [selectType, brandOrType]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    size: \"lg\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Delete Type or Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [showMsgErr && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\",\n            textAlign: \"center\"\n          },\n          children: msgErr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 26\n        }, this)\n      }, void 0, false), \"Choose Category:\", /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"mb-3\",\n        style: {\n          margin: \"0 auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: brandOrType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: brandOrType === \"Тип\" ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            disabled: true,\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 50\n          }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setBrandOrType(\"Type\"),\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 97\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this), \"Choose item of \", brandOrType === \"Тип\", \"Choose item of \", brandOrType === \"Brand\" ? \"Brand\" : \"Тип\", /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"mb-3\",\n        style: {\n          margin: \"0 auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: brandOrType === \"Тип\" === selectType.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [brandOrType === \"Тип\", types.map(({\n            id,\n            name\n          }) => selectType.name === name ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            disabled: true,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 61\n          }, this) : /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => setSelectType({\n              id,\n              name\n            }),\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 120\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: Delete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DeleteBrandOrType, \"8T+01rnH7MwOT7HaCGSFVl1vOpc=\");\n\n_c = DeleteBrandOrType;\nexport default DeleteBrandOrType;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteBrandOrType\");","map":{"version":3,"sources":["/Users/denismyachin/Downloads/online-store-master/front/src/components/modals/DeleteBrandOrType.js"],"names":["React","useEffect","useState","Button","Dropdown","Modal","deleteType","fetchTypes","DeleteBrandOrType","show","onHide","showSuccessMsgFunc","brandOrType","setBrandOrType","types","setTypes","selectType","setSelectType","name","showMsgErr","setShowMsgErr","msgErr","setMsgErr","then","data","Delete","id","color","textAlign","margin","map"],"mappings":"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","sourcesContent":[" import React, {useEffect, useState} from 'react';\n import {Button, Dropdown, Modal} from \"react-bootstrap\";\n import {deleteType, fetchTypes} from \"../../http/serviceAPI\";\n\n const DeleteBrandOrType = ({show, onHide, showSuccessMsgFunc}) => {\n     const [brandOrType, setBrandOrType] = useState(\"Тип\");\n    const [types, setTypes] = useState([]);\n    const [selectType, setSelectType] = useState({name: \"A type not selected\"});\n    const [showMsgErr, setShowMsgErr] = useState(false);\n    const [msgErr, setMsgErr] = useState('');\n\n    useEffect(() => {\n         fetchTypes().then(data => setTypes(data));\n     }, []);\n\n     const Delete = async () => {\n         if(brandOrType === \"Тип\") {\n             if(selectType.name !== \"A Type not selected\") {\n                 await deleteType(selectType.id).then(data => {\n                     showSuccessMsgFunc(data);\n                     onHide();\n                     setSelectType({name: \"A Type not selected\"});\n                 });\n             } else {\n                 setMsgErr(\"Please choose Type\");\n                 setShowMsgErr(true);\n             }\n         }\n     };\n\n    useEffect(() => setShowMsgErr(false), [selectType, brandOrType])\n\n     return (\n         <Modal\n             show={show}\n             onHide={onHide}\n             size=\"lg\"\n             centered\n         >\n             <Modal.Header closeButton>\n                 <Modal.Title>\n                    Delete Type or Brand\n                 </Modal.Title>\n             </Modal.Header>\n             <Modal.Body>\n                 {showMsgErr &&\n                     <>\n                         <p style={{color: \"red\", textAlign: \"center\"}}>{msgErr}</p>\n                     </>\n                 }\n\n                 Choose Category:\n                 <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n                     <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {brandOrType}\n                     </Dropdown.Toggle>\n\n                     <Dropdown.Menu>\n                        {brandOrType === \"Тип\" ? <Dropdown.Item disabled>Type</Dropdown.Item> : <Dropdown.Item onClick={() => setBrandOrType(\"Type\")}>Type</Dropdown.Item>}\n                     </Dropdown.Menu>\n                 </Dropdown>\n\n                 Choose item of {brandOrType ===  \"Тип\"}\n                 Choose item of {brandOrType === \"Brand\" ? \"Brand\" : \"Тип\"}\n                 <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n                     <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                         {brandOrType === \"Тип\" === selectType.name}\n                     </Dropdown.Toggle>\n\n                     <Dropdown.Menu>\n                         {brandOrType === \"Тип\"}\n                         {\n                             types.map(({id, name}) =>\n                                 selectType.name === name ? <Dropdown.Item disabled  key={id}>{name}</Dropdown.Item> : <Dropdown.Item  key={id} onClick={() => setSelectType({id, name})}>{name}</Dropdown.Item>\n                             )\n                         }\n\n                     </Dropdown.Menu>\n                 </Dropdown>\n\n\n             </Modal.Body>\n             <Modal.Footer>\n                 <Button variant=\"outline-danger\" onClick={onHide}>Close</Button>\n                 <Button variant=\"outline-success\" onClick={Delete}>Delete</Button>\n             </Modal.Footer>\n         </Modal>\n     );\n };\n\n export default DeleteBrandOrType;\n"]},"metadata":{},"sourceType":"module"}