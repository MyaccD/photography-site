[{"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/index.js":"1","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/App.js":"2","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/BasketStore.js":"3","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/UserStore.js":"4","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/FeedbackStore.js":"5","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/PhotoStore.js":"6","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/ServiceStore.js":"7","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/NavBar/NavBar.js":"8","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/AppRouter.js":"9","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/userApi.js":"10","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/serviceAPI.js":"11","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/routes.js":"12","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/index.js":"13","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/NavBar/preesent-components/trueAuth.js":"14","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/NavBar/preesent-components/falseAuth.js":"15","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/utils/consts.js":"16","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/NavBar/BasketNavBar.js":"17","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Feedback.js":"18","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/PhotoPageEdit.js":"19","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/AdminPhoto.js":"20","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Ordering.js":"21","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/ServicePageEdit.js":"22","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/photoAPI.js":"23","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/feedbackAPI.js":"24","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreateFeedback.js":"25","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/DeleteAlbum.js":"26","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/ordersAPI.js":"27","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreateAlbum.js":"28","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreatePhoto.js":"29","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/OneOrder.js":"30","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/ServicePage.js":"31","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Shop.js":"32","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/BasketCard.js":"33","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Auth.js":"34","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Orders.js":"35","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/AdminService.js":"36","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Contact.js":"37","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/PhotoPage.js":"38","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Home.js":"39","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/ServiceList.js":"40","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/Pages.js":"41","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/TypeBar.js":"42","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/oneItemInBasket.js":"43","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/itemOneorderInAdmin.js":"44","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreateService.js":"45","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreateType.js":"46","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/DeleteType.js":"47","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/AlbumBar.js":"48","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/serviceItem.js":"49"},{"size":863,"mtime":1655885408791,"results":"50","hashOfConfig":"51"},{"size":1807,"mtime":1654067558394,"results":"52","hashOfConfig":"51"},{"size":1715,"mtime":1653634659409,"results":"53","hashOfConfig":"51"},{"size":829,"mtime":1626551538000,"results":"54","hashOfConfig":"51"},{"size":306,"mtime":1655905347966,"results":"55","hashOfConfig":"51"},{"size":1014,"mtime":1655275842642,"results":"56","hashOfConfig":"51"},{"size":1014,"mtime":1654865857589,"results":"57","hashOfConfig":"51"},{"size":1266,"mtime":1655907788032,"results":"58","hashOfConfig":"51"},{"size":782,"mtime":1655907798684,"results":"59","hashOfConfig":"51"},{"size":703,"mtime":1626551538000,"results":"60","hashOfConfig":"51"},{"size":1794,"mtime":1653633379069,"results":"61","hashOfConfig":"51"},{"size":2176,"mtime":1655884985456,"results":"62","hashOfConfig":"51"},{"size":461,"mtime":1626551538000,"results":"63","hashOfConfig":"51"},{"size":1385,"mtime":1655907773096,"results":"64","hashOfConfig":"51"},{"size":531,"mtime":1655808148549,"results":"65","hashOfConfig":"51"},{"size":622,"mtime":1655885014531,"results":"66","hashOfConfig":"51"},{"size":852,"mtime":1653596852205,"results":"67","hashOfConfig":"51"},{"size":2871,"mtime":1655915295681,"results":"68","hashOfConfig":"51"},{"size":6806,"mtime":1655908355304,"results":"69","hashOfConfig":"51"},{"size":7141,"mtime":1655966457162,"results":"70","hashOfConfig":"51"},{"size":2962,"mtime":1655908045242,"results":"71","hashOfConfig":"51"},{"size":12864,"mtime":1655908388122,"results":"72","hashOfConfig":"51"},{"size":1381,"mtime":1655907924459,"results":"73","hashOfConfig":"51"},{"size":298,"mtime":1655897830411,"results":"74","hashOfConfig":"51"},{"size":2318,"mtime":1655914458145,"results":"75","hashOfConfig":"51"},{"size":2841,"mtime":1655907726490,"results":"76","hashOfConfig":"51"},{"size":1086,"mtime":1654840635371,"results":"77","hashOfConfig":"51"},{"size":1336,"mtime":1655274387235,"results":"78","hashOfConfig":"51"},{"size":2387,"mtime":1655351181696,"results":"79","hashOfConfig":"51"},{"size":2499,"mtime":1654841671491,"results":"80","hashOfConfig":"51"},{"size":2771,"mtime":1655908364939,"results":"81","hashOfConfig":"51"},{"size":1674,"mtime":1655908400792,"results":"82","hashOfConfig":"51"},{"size":1213,"mtime":1653635939695,"results":"83","hashOfConfig":"51"},{"size":3120,"mtime":1655963968215,"results":"84","hashOfConfig":"51"},{"size":4086,"mtime":1655911014141,"results":"85","hashOfConfig":"51"},{"size":8765,"mtime":1655966432941,"results":"86","hashOfConfig":"51"},{"size":4894,"mtime":1655961966542,"results":"87","hashOfConfig":"51"},{"size":2406,"mtime":1655908310824,"results":"88","hashOfConfig":"51"},{"size":2960,"mtime":1668615396367,"results":"89","hashOfConfig":"51"},{"size":504,"mtime":1654865871575,"results":"90","hashOfConfig":"51"},{"size":810,"mtime":1653634990232,"results":"91","hashOfConfig":"51"},{"size":1057,"mtime":1653634902840,"results":"92","hashOfConfig":"51"},{"size":3860,"mtime":1653664502924,"results":"93","hashOfConfig":"51"},{"size":6580,"mtime":1654848934986,"results":"94","hashOfConfig":"51"},{"size":5662,"mtime":1653632956476,"results":"95","hashOfConfig":"51"},{"size":1333,"mtime":1654529899342,"results":"96","hashOfConfig":"51"},{"size":2839,"mtime":1655908862281,"results":"97","hashOfConfig":"51"},{"size":1051,"mtime":1655789705461,"results":"98","hashOfConfig":"51"},{"size":1018,"mtime":1655366737674,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3scjfg",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/index.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/App.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/BasketStore.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/UserStore.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/FeedbackStore.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/PhotoStore.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/store/ServiceStore.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/NavBar/NavBar.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/AppRouter.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/userApi.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/serviceAPI.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/routes.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/index.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/NavBar/preesent-components/trueAuth.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/NavBar/preesent-components/falseAuth.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/utils/consts.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/NavBar/BasketNavBar.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Feedback.js",["212"],"import React, {useEffect, useContext, useState} from 'react';\nimport {Context} from \"../index\";\nimport {observer} from \"mobx-react-lite\";\nimport {\n    Button,\n    Col,\n    Container,\n    Image,\n    ListGroup,\n    Row\n} from \"react-bootstrap\";\n\nimport CreateFeedback from \"../components/modals/CreateFeedback\";\nimport {fetchFeedback} from \"../http/feedbackAPI\";\n\nconst Feedback = observer(() => {\n    const {feedback} = useContext(Context);\n    const [feedbackVisible, setFeedbackVisible] = useState(false);\n\n    useEffect(() => {\n        fetchFeedback().then(data => {\n            feedback.setFeedbacks(data.rows);\n        });\n    }, []);\n\n    useEffect(() => {\n        fetchFeedback().then(data => {\n            feedback.setFeedbacks(data.rows);           \n        });\n        }, [feedback]);\n\n    return (\n        <Container className=\"d-flex flex-column mt-3\">\n            <Row>\n                <Col xs={12} className=\"d-flex justify-content-center align-items-center\">\n                        <Button\n                            onClick={() => setFeedbackVisible(true)}\n                            variant=\"outline-dark\"\n                            className=\"mt-2 p-2\"\n\n                        >\n                        Оставить отзыв\n                        </Button>\n                        <CreateFeedback show={feedbackVisible} onHide={() => setFeedbackVisible(false)}/>\n                  \n                </Col>\n                <Col md={12}>\n                    <ListGroup>\n                        {feedback.feedbacks.map(feedback => \n                            <ListGroup.Item className=\"mt-3\" key={feedback.id}>\n                                <Row>\n                                    <Col xs={2}>\n                                        <Image width={140} style={{borderRadius: \"90px\"}} src={process.env.REACT_APP_API_URL + feedback.img}/>\n                                    </Col>\n                                    <Col xs={10}>\n                                \n                                        <Row>\n                                            <Col xs={12}>\n                                                Имя: {feedback.name}\n                                            </Col>\n                                        </Row>\n                                         <Row>\n                                            <Col xs={12}>\n                                                Отзыв: {feedback.description}\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            )\n                        }\n                    </ListGroup>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Feedback;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/PhotoPageEdit.js",["213"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Col, Container, Dropdown, Form, Image, Modal, Row} from \"react-bootstrap\";\nimport {useParams, useHistory} from 'react-router-dom';\nimport {fetchDeletePhoto, fetchOnePhoto, updatePhotos} from \"../http/photoAPI\";\nimport {Context} from \"../index\";\n import {ADMIN_PHOTO_ROUTE} from \"../utils/consts\";\n\nconst PhotoPageEdit = () => {\n    const {photo} = useContext(Context);\n    const history = useHistory();\n    const {id} = useParams();\n    const [photoCurr, setPhotoCurr] = useState({});\n    const [showMsg, setShowMsg] = useState(false);\n    const [msg, setMsg] = useState(\"\");\n    const [selectAlbum, setSelectAlbum] = useState({});\n    const [img, setImg] = useState(\"\");\n    const [imgFile, setImgFile] = useState(null);\n\n    const [isDisabledPutBtn, setDisabledPutBtn] = useState(true);\n\n    const deletePhoto = () => {\n        fetchDeletePhoto(id).then(() => {\n            history.push(ADMIN_PHOTO_ROUTE);\n        })\n    }\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const imgHandler = e => {\n        e.preventDefault();\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            setImg(reader.result);\n        };\n        reader.readAsDataURL(e.target.files[0]);\n        setImgFile(e.target.files[0]);\n    }\n\n    const putPhoto = () => {\n        const formData = new FormData();\n        formData.append('img', imgFile);\n        formData.append('albumId', selectAlbum.id);\n        updatePhotos(id, formData).then(data => {\n            setShowMsg(true);\n            setMsg(data);\n            setTimeout(() => setShowMsg(true), 5000)\n        });\n    }\n\n    useEffect(() => {\n        if(photoCurr && photoCurr.album) {\n            if(photoCurr.album.name !== selectAlbum.name ||\n                img\n            ) {\n                setDisabledPutBtn(false);\n            } else {\n                setDisabledPutBtn(true);\n            }\n        }\n    }, [img]);\n\n    useEffect(() => {\n        fetchOnePhoto(id).then(data => {\n            setPhotoCurr(data);\n            setSelectAlbum(data.album);\n        });\n    }, [id]);\n\n    return (\n        <Container className=\"mt-3\">\n            {showMsg && <Row className='d-flex, align-items-center justify-content-center'><div style={{background: '#28a745', marginLeft: 15, borderRadius: 5, color: 'white', padding: 6}}>\n                {msg}\n            </div>\n            </Row>}\n\n            <Row className='mt-3'>\n                <Col xs={12}>\n                    <Row>\n                        <Col xs={1} className=\"d-flex align-items-center\">\n                            id:\n                        </Col>\n                        <Col xs={11}>\n                            {photoCurr.id}\n                        </Col>\n                    </Row>\n                    {/*Album*/}\n                    <Row>\n                        <Col xs={1} className=\"d-flex align-items-center\">\n                            Альбом:\n                        </Col>\n                        <Col xs={11}>\n                            <Dropdown className=\"mt-2 mb-2\">\n                                <Dropdown.Toggle>{selectAlbum.name || \"Выберите тип\"}</Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {photo.albums.map(album => {\n                                        return album.name === selectAlbum.name ?\n                                            <Dropdown.Item\n                                                key={album.id}\n                                                disabled\n                                            >\n                                                {album.name}\n                                            </Dropdown.Item>\n                                            :\n                                            <Dropdown.Item\n                                                key={album.id}\n                                                onClick={() => setSelectAlbum(album)}\n                                            >\n                                                {album.name}\n                                            </Dropdown.Item>\n                                    })}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n                \n                    {/*Img*/}\n                    <Row className=\"mt-4\">\n                        <Col xs={3} className=\"d-flex flex-column justify-content-center text-center\">\n                            Текущее изображение: <br/>\n                            <Image style={{margin: \"0 auto\", marginTop: 15}} width={150} src={process.env.REACT_APP_API_URL + photoCurr.img}/>\n                        </Col>\n                        {img && <Col xs={6} className=\"d-flex flex-column justify-content-center text-center\">\n                            Новое изображение: <br/>\n                            <Image style={{margin: \"0 auto\", marginTop: 15}} width={150} src={img}/>\n                        </Col>}\n                        <Col xs={3} className=\"d-flex align-items-center\">\n                            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                                <Form.Group>\n                                    <Form.File id=\"exampleFormControlFile1\" label=\"Загрузить файл\" onChange={imgHandler}/>\n                                </Form.Group>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mt-5\">\n                        <Col xs={12}>\n                            {isDisabledPutBtn ? <Button disabled>Обновить фото</Button> : <Button onClick={putPhoto}>Обновить фото</Button>}\n                            <Button className=\"ml-5\" variant=\"danger\" onClick={handleShow}>Удалить фото</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Удалить фото {photoCurr.id}?</Modal.Title>\n                </Modal.Header>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Отмена\n                    </Button>\n                    <Button variant=\"primary\" onClick={deletePhoto}>\n                        Удалить\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    );\n};\n\nexport default PhotoPageEdit;\n\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/AdminPhoto.js",["214","215","216"],"import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Button,\n    Col,\n    Container,\n    Dropdown,\n    Image,\n    ListGroup,\n    Pagination,\n    Row\n} from \"react-bootstrap\";\n\nimport CreatePhoto from \"../components/modals/CreatePhoto\";\nimport CreateAlbum from \"../components/modals/CreateAlbum\";\nimport {getAllPhotosInAdminPage} from \"../http/photoAPI\";\nimport {NavLink} from \"react-router-dom\";\nimport {PHOTO_EDIT_ROUTE, ADMIN_SERVICE_ROUTE} from \"../utils/consts\";\nimport DeleteAlbum from \"../components/modals/DeleteAlbum\";\n\nconst AdminPhoto = () => {\n    const history = useHistory();\n    const [albumVisible, setAlbumVisible] = useState(false);\n    const [photoVisible, setPhotoVisible] = useState(false);\n    const [deleteAlbum, setDeleteAlbum] = useState(false);\n    const [searchPhoto, setSearchPhoto] = useState('');\n    const [searchedPhoto, setSearchedPhoto] = useState([]);\n    const [filter, setFilter] = useState(\"Все\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [count, setCount] = useState(1);\n    const [successMsg, setSuccessMsg] = useState('');\n    const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n\n\n    //pagination\n    const limit = 5;\n    const pageCount = Math.ceil(Number(count) / limit);\n    const pages = [];\n    for (let number = 1; number < pageCount + 1; number++) {\n        pages.push(\n            <Pagination.Item key={number} active={number === currentPage} onClick={() => setCurrentPage(number)}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n\n    useEffect(() => {\n        getAllPhotosInAdminPage(searchPhoto, currentPage, filter).then(({count, rows}) => {\n            setSearchedPhoto(rows);\n            setCount(count)\n        })\n    }, [currentPage])\n\n    useEffect(() => {\n        getAllPhotosInAdminPage(searchPhoto, 1, filter).then(({count, rows}) => {\n            setSearchedPhoto(rows);\n            setCount(count);\n            setCurrentPage(1);\n        })\n    }, [filter, successMsg])\n\n    const showSuccessMsgFunc = (msg) => {\n        setSuccessMsg(msg);\n        setShowSuccessMsg(true);\n        setTimeout(() => setShowSuccessMsg(false), 5000);\n    }\n\n    return (\n        <Container className=\"d-flex flex-column mt-3\">\n            {showSuccessMsg && <Row className='d-flex, align-items-center justify-content-center'><div style={{background: '#28a745', marginLeft: 15, marginBottom: 15, borderRadius: 5, color: 'white', padding: 6}}>\n                {successMsg}\n            </div>\n            </Row>}\n\n            <Row className='d-flex, align-items-center justify-content-center'>\n                <Button\n                    className={\"mr-3\"}\n                    variant={\"dark\"}\n                    onClick={() => {history.push(ADMIN_SERVICE_ROUTE)}}\n                    style={{width: '400px'}}\n                >\n                Открыть панель редактирования услуг\n                </Button>\n            </Row>\n\n            <Row>\n                <Col md={2} xs={6}>\n                        <Button\n                            onClick={() => setAlbumVisible(true)}\n                            variant=\"outline-success\"\n                            className=\"mt-3 p-2\"\n                            >\n                            Добавить альбом\n                        </Button>\n                        <Button\n                            onClick={() => setDeleteAlbum(true)}\n                            variant=\"outline-danger\"\n                            className=\"mt-2 p-2\"\n                        >\n                            Удалить альбом\n                        </Button>\n                        <Button\n                            onClick={() => setPhotoVisible(true)}\n                            variant=\"outline-dark\"\n                            className=\"mt-2 p-2\"\n\n                        >\n                        Добавить фото\n                        </Button>\n                        <CreatePhoto show={photoVisible} onHide={() => setPhotoVisible(false)}/>\n                        <CreateAlbum show={albumVisible} onHide={() => setAlbumVisible(false)}/>\n                        <DeleteAlbum show={deleteAlbum} onHide={() => setDeleteAlbum(false)} showSuccessMsgFunc={showSuccessMsgFunc}/>\n                </Col>\n                <Col md={10}>\n                    <Dropdown className=\"mt-3 mb-3\" style={{margin: \"0 auto\"}}>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {filter}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {filter === \"Все\" ? <Dropdown.Item disabled>Все</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Все\")}>Все</Dropdown.Item>}\n                            {filter === \"Без альбома\" ? <Dropdown.Item disabled>Без альбома</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Без альбома\")}>Без альбома</Dropdown.Item>}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                \n                    <ListGroup>\n                        {searchedPhoto && searchedPhoto.map( ({id, img, album}) => {\n                            return (\n                                <ListGroup.Item className=\"mt-3\" key={id}>\n                                    <Row>\n                                        <Col md={2} sm={2}>\n                                            <Image width={140} src={process.env.REACT_APP_API_URL + img}/>\n                                        </Col>\n                                        <Col md={8} sm={8}>\n                                            <Row>\n                                                <Col md={8} sm={8}>\n                                                    <NavLink to={PHOTO_EDIT_ROUTE + `/${id}`}>id: {id}</NavLink>\n                                                </Col>\n                                            </Row>\n                                            {/* <Row>\n                                                <Col xs={12}>\n                                                    Альбом: {album.name}\n                                                </Col>\n                                            </Row> */}\n                                        </Col>\n                                        <Col md={2} sm={2}>\n                                            <NavLink to={PHOTO_EDIT_ROUTE + `/${id}`}>Редактировать</NavLink>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            )\n                        })}\n                    </ListGroup>\n\n                    <Pagination size=\"sm\" className=\"mt-4 mb-4\" style={{margin: \"0 auto\"}}>\n                        {searchedPhoto && searchedPhoto.length > 0 ? pages : false}\n                    </Pagination>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default AdminPhoto;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Ordering.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/ServicePageEdit.js",["217"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Col, Container, Dropdown, Form, Image, Modal, Row} from \"react-bootstrap\";\nimport {useParams, useHistory} from 'react-router-dom';\nimport {fetchDeleteService, fetchOneService, updateServices} from \"../http/serviceAPI\";\nimport {Context} from \"../index\";\nimport {ADMIN_SERVICE_ROUTE} from \"../utils/consts\";\n\nconst ServicePageEdit = () => {\n    const {service} = useContext(Context);\n    const history = useHistory();\n    const {id} = useParams();\n    const [serviceCurr, setServiceCurr] = useState({});\n    const [showMsg, setShowMsg] = useState(false);\n    const [msg, setMsg] = useState(\"\");\n    const [selectType, setSelectType] = useState({});\n    const [name, setName] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(0);\n    const [img, setImg] = useState(\"\");\n    const [imgFile, setImgFile] = useState(null);\n    const [info, setInfo] = useState([]);\n\n    const [isDisabledPutBtn, setDisabledPutBtn] = useState(true);\n\n    const deleteService = () => {\n        fetchDeleteService(id).then(() => {\n            history.push(ADMIN_SERVICE_ROUTE);\n        })\n    }\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const imgHandler = e => {\n        e.preventDefault();\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            setImg(reader.result);\n        };\n        reader.readAsDataURL(e.target.files[0]);\n        setImgFile(e.target.files[0]);\n    }\n\n    //info\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', id: Date.now()}]);\n    };\n\n    const deleteInfo = (number) => {\n        setInfo(info.filter(item => item.number !== number));\n    };\n\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.id === number ? {...i, [key]: value} : i));\n    };\n\n    const putService = () => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('description', description);\n        formData.append('price', `${price}`);\n        formData.append('img', imgFile);\n        formData.append('typeId', selectType.id);\n        formData.append('info', JSON.stringify(info));\n        updateServices(id, formData).then(data => {\n            setShowMsg(true);\n            setMsg(data);\n            setTimeout(() => setShowMsg(true), 5000)\n        });\n    }\n\n    const checkInfo = () => {\n        let isInfoEmpty = true;\n        info.forEach(item => {\n            for(let key in item) {\n                if(key === \"title\" || key === \"description\") {\n                    if(!item[key]) {\n                        isInfoEmpty = false;\n                    }\n                }\n            }\n        });\n        return isInfoEmpty;\n    }\n\n    useEffect(() => {\n        let checkInfoVal = false;\n        if(serviceCurr.info && serviceCurr.info.length !== info.length) {\n            checkInfoVal = checkInfo();\n        }\n\n        if(serviceCurr && serviceCurr.type) {\n            if(serviceCurr.type.name !== selectType.name ||\n                serviceCurr.name !== name ||\n                serviceCurr.description !== description ||\n                serviceCurr.price !== price ||\n                checkInfoVal ||\n                img\n            ) {\n                setDisabledPutBtn(false);\n            } else {\n                setDisabledPutBtn(true);\n            }\n        }\n    }, [name, description, selectType, price, img, info]);\n\n    useEffect(() => {\n        fetchOneService(id).then(data => {\n            setServiceCurr(data);\n            setSelectType(data.type);\n            setName(data.name);\n            setDescription(data.description)\n            setPrice(data.price);\n            setInfo(data.info)\n        });\n    }, [id]);\n\n    return (\n        <Container className=\"mt-3\">\n            {showMsg && <Row className='d-flex, align-items-center justify-content-center'><div style={{background: '#28a745', marginLeft: 15, borderRadius: 5, color: 'white', padding: 6}}>\n                {msg}\n            </div>\n            </Row>}\n\n            <Row className='mt-3'>\n                <Col xs={12}>\n                    <Row>\n                        <Col xs={1} className=\"d-flex align-items-center\">\n                            id:\n                        </Col>\n                        <Col xs={11}>\n                            {serviceCurr.id}\n                        </Col>\n                    </Row>\n                    {/*Type*/}\n                    <Row>\n                        <Col xs={1} className=\"d-flex align-items-center\">\n                            Тип:\n                        </Col>\n                        <Col xs={11}>\n                            <Dropdown className=\"mt-2 mb-2\">\n                                <Dropdown.Toggle>{selectType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {service.types.map(type => {\n                                        return type.name === selectType.name ?\n                                            <Dropdown.Item\n                                                key={type.id}\n                                                disabled\n                                            >\n                                                {type.name}\n                                            </Dropdown.Item>\n                                            :\n                                            <Dropdown.Item\n                                                key={type.id}\n                                                onClick={() => setSelectType(type)}\n                                            >\n                                                {type.name}\n                                            </Dropdown.Item>\n                                    })}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n                    {/*Name*/}\n                    <Row>\n                        <Col xs={1} className=\"d-flex align-items-center\">\n                            Название:\n                        </Col>\n                        <Col xs={8}>\n                            <Form.Control\n                                type=\"text\"\n                                value={name}\n                                onChange={e => setName(e.target.value)}\n                            />\n                        </Col>\n                        <Col xs={3} className=\"d-flex align-items-center\">\n                            {name.length === 0 && <b style={{color: \"red\"}}>Заполните поле</b>}\n                        </Col>\n                    </Row>\n                    {/*Description*/}\n                    <Row>\n                        <Col xs={1} className=\"d-flex align-items-center\">\n                            Описание:\n                        </Col>\n                        <Col xs={8}>\n                            <Form.Control\n                                type=\"text\"\n                                value={description}\n                                onChange={e => setDescription(e.target.value)}\n                            />\n                        </Col>\n                        <Col xs={3} className=\"d-flex align-items-center\">\n                            {description.length === 0 && <b style={{color: \"red\"}}>Заполните поле</b>}\n                        </Col>\n                    </Row>\n                    {/*Price*/}\n                    <Row className=\"mt-2\">\n                        <Col xs={1} className=\"d-flex align-items-center\">\n                            Цена:\n                        </Col>\n                        <Col xs={8}>\n                            <Form.Control\n                                type=\"number\"\n                                value={price}\n                                onChange={e => setPrice(Number(e.target.value))}\n                            />\n                        </Col>\n                        <Col xs={2} className=\"d-flex align-items-center\">\n                            {price === 0 && <b style={{color: \"red\"}}>Заполните поле</b>}\n                        </Col>\n                    </Row>\n\n                    {/*Img*/}\n                    <Row className=\"mt-4\">\n                        <Col xs={3} className=\"d-flex flex-column justify-content-center text-center\">\n                            Текущее изображение: <br/>\n                            <Image style={{margin: \"0 auto\", marginTop: 15}} width={150} src={process.env.REACT_APP_API_URL + serviceCurr.img}/>\n                        </Col>\n                        {img && <Col xs={6} className=\"d-flex flex-column justify-content-center text-center\">\n                            Новое изображение: <br/>\n                            <Image style={{margin: \"0 auto\", marginTop: 15}} width={150} src={img}/>\n                        </Col>}\n                        <Col xs={3} className=\"d-flex align-items-center\">\n                            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                                <Form.Group>\n                                    <Form.File id=\"exampleFormControlFile1\" label=\"Загрузить файл\" onChange={imgHandler}/>\n                                </Form.Group>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n                    {/*Characteristics*/}\n                    <Row className=\"d-flex flex-column m-3\">\n                        <Button\n                            variant=\"outline-dark\"\n                            onClick={() => addInfo()}\n                        >\n                            Добавить новое поле\n                        </Button>\n                        {info.map((item, index) =>\n                            <Row key={index} className=\"mt-3\">\n                                <Col md={4}>\n                                    <Form.Control\n                                        placeholder=\"Введите заголовок...\"\n                                        value={item.title}\n                                        onChange={e => changeInfo('title', e.target.value, item.id)}\n                                    />\n                                    {!info[index].title &&  <b style={{color: \"red\"}}>Заполните поле</b>}\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Control\n                                        placeholder=\"Введите описание...\"\n                                        value={item.description}\n                                        onChange={e => changeInfo('description', e.target.value, item.id)}\n                                    />\n                                    {!info[index].description &&  <b style={{color: \"red\"}}>Заполните поле</b>}\n                                </Col>\n                                <Col md={4}>\n                                    <Button\n                                        variant=\"outline-danger\"\n                                        onClick={() => deleteInfo(item.number)}\n                                    >\n                                        Удалить поле\n                                    </Button>\n                                </Col>\n                            </Row>\n                        )}\n                    </Row>\n\n                    <Row className=\"mt-5\">\n                        <Col xs={12}>\n                            {isDisabledPutBtn ? <Button disabled>Обновить услугу</Button> : <Button onClick={putService}>Обновить услугу</Button>}\n                            <Button className=\"ml-5\" variant=\"danger\" onClick={handleShow}>Удалить услугу</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Удалить услугу {serviceCurr.id}?</Modal.Title>\n                </Modal.Header>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Отмена\n                    </Button>\n                    <Button variant=\"primary\" onClick={deleteService}>\n                        Удалить\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    );\n};\n\nexport default ServicePageEdit;\n\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/photoAPI.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/feedbackAPI.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreateFeedback.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/DeleteAlbum.js",["218"],"import React, {useEffect, useState} from 'react';\nimport {Button, Dropdown, Modal} from \"react-bootstrap\";\nimport {deleteAlbum, fetchAlbums} from \"../../http/photoAPI\";\n\nconst DeleteAlbum = ({show, onHide, showSuccessMsgFunc}) => {\n   const [Album, setAlbum] = useState(\"Альбом\");\n   const [albums, setAlbums] = useState([]);\n   const [selectAlbum, setSelectAlbum] = useState({name: \"Альбом не выбран\"});\n   const [showMsgErr, setShowMsgErr] = useState(false);\n   const [msgErr, setMsgErr] = useState('');\n\n   useEffect(() => {\n        fetchAlbums().then(data => setAlbums(data));\n    }, []);\n\n    const Delete = async () => {\n        if(Album === \"Альбом\") {\n            if(selectAlbum.name !== \"Альбом не выбран\") {\n                await deleteAlbum(selectAlbum.id).then(data => {\n                    showSuccessMsgFunc(data);\n                    onHide();\n                    setSelectAlbum({name: \"Альбом не выбран\"});\n                });\n            } else {\n                setMsgErr(\"Выберите альбом\");\n                setShowMsgErr(true);\n            }\n        }\n    };\n\n   useEffect(() => setShowMsgErr(false), [selectAlbum, Album])\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                   Удаление альбома\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {showMsgErr &&\n                    <>\n                        <p style={{color: \"red\", textAlign: \"center\"}}>{msgErr}</p>\n                    </>\n                }\n\n                Выберите альбом {Album ===  \"Альбом\"}\n                <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                        {Album}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        {Album === \"Альбом\"}\n                        {\n                            albums.map(({id, name}) =>\n                                selectAlbum.name === name ? <Dropdown.Item disabled  key={id}>{name}</Dropdown.Item> : <Dropdown.Item  key={id} onClick={() => setSelectAlbum({id, name})}>{name}</Dropdown.Item>\n                            )\n                        }\n\n                    </Dropdown.Menu>\n                </Dropdown>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={Delete}>Удалить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default DeleteAlbum;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/http/ordersAPI.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreateAlbum.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreatePhoto.js",["219","220","221"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Context} from \"../../index\";\nimport {Button, Col, Dropdown, Form, Modal, Row} from \"react-bootstrap\";\nimport {createPhoto, fetchAlbums} from \"../../http/photoAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreatePhoto = observer(({show, onHide}) => {\n    const {photo} = useContext(Context);\n    const [file, setFile] = useState(null);\n\n    useEffect(() => {\n        fetchAlbums().then(data => photo.setAlbums(data));\n    }, []);\n\n    const selectFile = e => {\n        setFile(e.target.files[0]);\n    };\n\n    const addPhoto = () => {\n        const formData = new FormData();\n        formData.append('img', file);\n        formData.append('albumId', photo.selectedAlbum.id);\n        createPhoto(formData).then(() => onHide());\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    Добавить новое фото\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{photo.selectedAlbum.name || \"Выберите альбом\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {photo.albums.map(album =>\n                                <Dropdown.Item\n                                    key={album.id}\n                                    onClick={() => photo.setSelectedAlbum(album)}\n                                >\n                                    {album.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addPhoto}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreatePhoto;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/OneOrder.js",["222"],"import React, {useEffect, useState} from 'react';\nimport {Col, Container, Image, Row, Spinner} from \"react-bootstrap\";\nimport {useParams} from \"react-router-dom\";\nimport {getOneOrderServices} from \"../http/ordersAPI\";\n\nconst OneOrder = () => {\n    const {id} = useParams();\n    const [loading, setLoading] = useState(true);\n    const [order, setOrder] = useState([]);\n\n    useEffect(() => {\n        getOneOrderServices(id).then(data => {\n            setOrder(data);\n            setLoading(false);\n            console.log(order);\n        })\n    }, []);\n\n    if(loading) {\n        return <Spinner animation=\"grow\"/>\n    }\n\n    //Format date (createdAt)\n    const formatDate = (propsDate) => {\n        const date = new Date(Date.parse(propsDate));\n        const options = {\n            weekday: \"short\",\n            hour: 'numeric',\n            minute: 'numeric',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            timezone: 'UTC'\n        };\n        return date.toLocaleString(\"ru\", options);\n    }\n\n    return (\n        <Container className=\"d-flex flex-column\">\n            Заявка id: {id} <br />\n            Статус: {order?.descr.complete ? \"Выполнено\" : \"В процессе\"} <br />\n            Получено: {formatDate(order?.descr.createdAt)} <br />\n            {order?.descr.complete ? formatDate(order.descr.complete.updatedAt) : false }\n            <a href={`name:${order?.descr.name}`}>Имя: {order?.descr.name}</a>\n            <a href={`tel:${order?.descr.mobile}`}>Телефон: {order?.descr.mobile}</a>\n            <a href={`email:${order?.descr.email}`}>Email: {order?.descr.email}</a>\n            <a href={`desription:${order?.descr.description}`}>Описание: {order?.descr.description}</a>\n            <br />\n\n            {order?.services.map( ({count,descr}, i) => {\n                return (\n                    <Row key={i} className=\"mb-5\">\n                        <Col xs={2}>\n                            <Image width={150} src={process.env.REACT_APP_API_URL + descr.img}/>\n                        </Col>\n                        <Col xs={10}>\n                            Тип услуги: {descr.type.name}<br />\n                            Название: {descr.name}<br />\n                            Цена: {descr.price} РУБ<br />\n                        </Col>\n                    </Row>\n                )\n            })}\n\n        </Container>\n    );\n};\n\nexport default OneOrder;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/ServicePage.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Shop.js",["223","224"],"import React, {useContext, useEffect} from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport TypeBar from \"../components/TypeBar\";\nimport ServiceList from \"../components/ServiceList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchService, fetchTypes} from \"../http/serviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n    const {service} = useContext(Context);\n\n    useEffect(() => {\n        fetchTypes().then(data => service.setTypes(data));\n        fetchService(null, 1, 3).then(data => {\n            service.setServices(data.rows);\n            service.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(\n        () => {\n            if(service.selectedType === \"all\") {\n                    fetchService(service.selectedType.id, service.page, 9).then(data => {\n                        service.setServices(data.rows);\n                        service.setTotalCount(data.count);\n                    });\n                } else {\n                    fetchService(service.selectedType.id, service.page, 3).then(data => {\n                        service.setServices(data.rows);\n                        service.setTotalCount(data.count);\n                    });\n                }\n        }, [service.page, service.selectedType]);\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={2}>\n                    <TypeBar/>\n                </Col>\n                <Col md={10}>\n                    <ServiceList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/BasketCard.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Auth.js",["225","226"],"import React, {useContext, useState} from 'react';\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {Button, Card, Container, Form, Row} from \"react-bootstrap\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userApi\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context);\n    const history = useHistory();\n    const location = useLocation();\n    const isLogin = location.pathname === LOGIN_ROUTE;\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const click = async () => {\n        try {\n            let data;\n            if(isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password);\n            }\n            user.setUser(data);\n            user.setIsAuth(true);\n            history.push(SHOP_ROUTE);\n        } catch (e) {\n            alert(e.response.data.message);\n        }\n    };\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 500}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? \"Авторизация\" : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите свой E-mail...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Ввдетие пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3 align-items-center\">\n                        {/* {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Регистрация</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Вход</NavLink>\n                            </div>\n                        } */}\n\n                        <Button\n                            className=\"align-self-end\"\n                            variant=\"outline-success\"\n                            onClick={click}\n                        >\n                            {isLogin ? \"Войти\" : \"Зарегистрироваться\"}\n                        </Button>\n                    </Row>\n                </Form>\n            </Card>\n\n        </Container>\n    );\n});\n\nexport default Auth;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Orders.js",["227"],"import React, {useEffect, useState} from 'react';\nimport {Col, Container, Dropdown, ListGroup, Pagination, Row, Spinner} from \"react-bootstrap\";\nimport {fetchOrders} from \"../http/ordersAPI\";\nimport ItemOneOrderInAdmin from \"../components/itemOneorderInAdmin\";\n\nconst Orders = () => {\n    const [loading, setLoading] = useState(false);\n    const [orders, setOrders] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const [filter, setFilter] = useState(\"Все\");\n    const [rerender, setRerender] = useState(false);\n\n    //pagination\n    const limit = 5;\n    const pageCount = Math.ceil(Number(count) / limit);\n    const pages = [];\n\n    useEffect(() => {\n        fetchOrders({limit, page: 1}).then(data => {\n            setOrders(data);\n            setLoading(false);\n            setCount(data.count);\n        })\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        fetchOrders({limit, page: currentPage}).then(data => {\n            setOrders(data);\n            setLoading(false);\n        })\n    }, [currentPage]);\n\n    useEffect(() => {\n        setLoading(true);\n        fetchOrders({limit, page: 1, complete: filter}).then(data => {\n            setOrders(data);\n            setLoading(false);\n            setCount(data.count);\n            setCurrentPage(1);\n        })\n    }, [filter]);\n\n    //re-render after change status, or delete some order\n    useEffect(() => {\n        setLoading(true);\n        fetchOrders({limit, page: currentPage, complete: filter}).then(data => {\n            setOrders(data);\n            setLoading(false);\n            setCount(data.count);\n            setCurrentPage(1);\n        })\n    }, [rerender]);\n\n    const reRender = () => {\n        setRerender(!rerender);\n    }\n\n    if(loading) {\n        return <Spinner animation=\"grow\"/>\n    }\n\n    for (let number = 1; number < pageCount + 1; number++) {\n        pages.push(\n            <Pagination.Item key={number} active={number === currentPage} onClick={() => setCurrentPage(number)}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n\n    return (\n        <Container className=\"d-flex flex-column\">\n            <Row>\n                <Col xs={12} className=\"mt-3 d-flex justify-content-center align-items-center\">\n                    <div className=\"mr-3\">Фильтр:</div>\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {filter}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {filter === \"Все\" ? <Dropdown.Item disabled>Все</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Все\")}>Все</Dropdown.Item>}\n                            {filter === \"Выполненные\" ? <Dropdown.Item disabled>Выполненные</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Выполненные\")}>Выполненные</Dropdown.Item>}\n                            {filter === \"Не выполненные\" ? <Dropdown.Item disabled>Не выполненные</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Не выполненные\")}>Не выполненные</Dropdown.Item>}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Col>\n            </Row>\n            <ListGroup>\n                {orders.rows?.map( ({id, complete, mobile, createdAt, updatedAt, userId}) =>\n                    <ItemOneOrderInAdmin\n                        key={id}\n                        id={id}\n                        complete={complete}\n                        mobile={mobile}\n                        createdAt={createdAt}\n                        updatedAt={updatedAt}\n                        userId={userId}\n                        reRender={reRender}/>)}\n            </ListGroup>\n            <Pagination size=\"sm\" className=\"mt-4 mb-4\" style={{margin: \"0 auto\"}}>\n                {pages}\n            </Pagination>\n        </Container>\n    );\n};\n\nexport default Orders;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/AdminService.js",["228","229"],"import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Button,\n    Col,\n    Container,\n    Dropdown,\n    Form,\n    Image,\n    InputGroup,\n    ListGroup,\n    Pagination,\n    Row\n} from \"react-bootstrap\";\n\nimport CreateService from \"../components/modals/CreateService\";\nimport CreateType from \"../components/modals/CreateType\";\nimport {getAllServicesInAdminPage} from \"../http/serviceAPI\";\nimport {NavLink} from \"react-router-dom\";\nimport {SERVICE_EDIT_ROUTE, ADMIN_PHOTO_ROUTE} from \"../utils/consts\";\nimport DeleteType from \"../components/modals/DeleteType\";\n\nconst AdminService = () => {\n    const history = useHistory();\n    const [typeVisible, setTypeVisible] = useState(false);\n    const [serviceVisible, setServiceVisible] = useState(false);\n    const [deleteType, setDeleteType] = useState(false);\n    const [searchService, setSearchService] = useState('');\n    const [searchedService, setSearchedService] = useState([]);\n    const [filter, setFilter] = useState(\"Все\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const [count, setCount] = useState(1);\n    const [successMsg, setSuccessMsg] = useState('');\n    const [showSuccessMsg, setShowSuccessMsg] = useState(false);\n\n\n    //pagination\n    const limit = 5;\n    const pageCount = Math.ceil(Number(count) / limit);\n    const pages = [];\n    for (let number = 1; number < pageCount + 1; number++) {\n        pages.push(\n            <Pagination.Item key={number} active={number === currentPage} onClick={() => setCurrentPage(number)}>\n                {number}\n            </Pagination.Item>\n        );\n    }\n\n    useEffect(() => {\n        getAllServicesInAdminPage(searchService, currentPage, filter).then(({count, rows}) => {\n            setSearchedService(rows);\n            setCount(count)\n        })\n    }, [currentPage])\n\n    useEffect(() => {\n        getAllServicesInAdminPage(searchService, 1, filter).then(({count, rows}) => {\n            setSearchedService(rows);\n            setCount(count);\n            setCurrentPage(1);\n        })\n    }, [filter, successMsg])\n\n\n    const fetchService = () => {\n        getAllServicesInAdminPage(searchService, currentPage, filter).then(({count, rows}) => {\n            setSearchedService(rows);\n            setCount(count)\n        })\n    };\n\n    const showSuccessMsgFunc = (msg) => {\n        setSuccessMsg(msg);\n        setShowSuccessMsg(true);\n        setTimeout(() => setShowSuccessMsg(false), 5000);\n    }\n\n    return (\n        <Container className=\"d-flex flex-column mt-3\">\n            {showSuccessMsg && <Row className='d-flex, align-items-center justify-content-center'><div style={{background: '#28a745', marginLeft: 15, marginBottom: 15, borderRadius: 5, color: 'white', padding: 6}}>\n                {successMsg}\n            </div>\n            </Row>}\n\n            <Row className='d-flex, align-items-center justify-content-center'>\n                <Button\n                    className={\"mr-3\"}\n                    variant={\"dark\"}\n                    onClick={() => {history.push(ADMIN_PHOTO_ROUTE)}}\n                    style={{width: '400px'}}\n                >\n                Открыть панель редактирования фотографий\n                </Button>\n            </Row>\n            \n\n            <Row>\n                <Col md={2}>\n                        <Button\n                            onClick={() => setTypeVisible(true)}\n                            variant=\"outline-success\"\n                            className=\"mt-3 p-2\"\n                            >\n                            Добавить тип\n                        </Button>\n                        <Button\n                            onClick={() => setDeleteType(true)}\n                            variant=\"outline-danger\"\n                            className=\"mt-2 p-2\"\n                        >\n                            Удалить тип\n                        </Button>\n                        <Button\n                            onClick={() => setServiceVisible(true)}\n                            variant=\"outline-dark\"\n                            className=\"mt-2 p-2\"\n\n                        >\n                        Добавить услугу\n                        </Button>\n                        <CreateService show={serviceVisible} onHide={() => setServiceVisible(false)}/>\n                        <CreateType show={typeVisible} onHide={() => setTypeVisible(false)}/>\n                        <DeleteType show={deleteType} onHide={() => setDeleteType(false)} showSuccessMsgFunc={showSuccessMsgFunc}/>\n                </Col>\n                <Col md={10}>\n                    <Dropdown className=\"mt-3 mb-3\" style={{margin: \"0 auto\"}}>\n                        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                            {filter}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {filter === \"Все\" ? <Dropdown.Item disabled>Все</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Все\")}>Все</Dropdown.Item>}\n                            {filter === \"Без типа\" ? <Dropdown.Item disabled>Без типа</Dropdown.Item> : <Dropdown.Item onClick={() => setFilter(\"Без типа\")}>Без типа</Dropdown.Item>}\n                        </Dropdown.Menu>\n                    </Dropdown>\n\n                    \n\n                    <InputGroup className=\"mb-3\" >\n                        <Form.Control\n                            aria-label=\"Default\"\n                            aria-describedby=\"inputGroup-sizing-default\"\n                            value={searchService}\n                            onChange={e => setSearchService(e.target.value)}\n                            placeholder=\"Введите название услуги...\"\n                        />\n                        <Button\n                            onClick={fetchService}\n                            variant=\"outline-dark\"\n                            className=\"ml-2\"\n                        >\n                            Поиск\n                        </Button>\n                    </InputGroup>\n\n                    <ListGroup>\n                        {searchedService && searchedService.map( ({id, img, type, price, name}) => {\n                            return (\n                                <ListGroup.Item className=\"mt-3\" key={id}>\n                                    <Row>\n                                        <Col xs={2}>\n                                            <Image width={140} src={process.env.REACT_APP_API_URL + img}/>\n                                        </Col>\n                                        <Col xs={8}>\n                                            <Row>\n                                                <Col xs={12}>\n                                                    <NavLink to={SERVICE_EDIT_ROUTE + `/${id}`}>id: {id}</NavLink>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col xs={12}>\n                                                    Название: {name}\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col xs={12}>\n                                                    Цена: {price}\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col xs={12}>\n                                                    Тип: {type.name || \"тип отсутствует\"}\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col xs={2}>\n                                            <NavLink to={SERVICE_EDIT_ROUTE + `/${id}`}>Редактировать</NavLink>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            )\n                        })}\n                    </ListGroup>\n\n                    <Pagination size=\"sm\" className=\"mt-4 mb-4\" style={{margin: \"0 auto\"}}>\n                        {searchedService && searchedService.length > 0 ? pages : false}\n                    </Pagination>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default AdminService;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Contact.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/PhotoPage.js",["230","231","232"],"import React, {useContext, useEffect} from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\nimport AlbumBar from \"../components/AlbumBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchPhoto, fetchAlbums} from \"../http/photoAPI\";\nimport Masonry from \"react-masonry-css\";\nimport './PhotoPage.css'\nimport { SRLWrapper} from \"simple-react-lightbox\";\n\nconst PhotoPage = observer(() => {\n    const {photo} = useContext(Context);\n\n    useEffect(() => {\n        fetchAlbums().then(data => photo.setAlbums(data));\n        fetchPhoto(null, 1, 100).then(data => {\n            photo.setPhotos(data.rows);\n            photo.setTotalCount(data.count);\n        });\n    }, []);\n\n    useEffect(\n        () => {\n            if(photo.selectedAlbum === \"all\") {\n                    fetchPhoto(photo.selectedAlbum.id, photo.page, ).then(data => {\n                        photo.setPhotos(data.rows);\n                        photo.setTotalCount(data.count);\n                    });\n                } else {\n                    fetchPhoto(photo.selectedAlbum.id, photo.page, ).then(data => {\n                        photo.setPhotos(data.rows);\n                        photo.setTotalCount(data.count);\n                    });\n                }\n        }, [photo.page, photo.selectedAlbum]);\n\n        const breakpoints = {\n            default: 4,\n            1100: 2,\n            700: 1\n        }\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n        \n                 <Col md={12}> \n                 <Row className=\"d-flex flex-column align-items-center\">\n                 <AlbumBar/> \n                 </Row>\n                 </Col> \n          \n            <SRLWrapper>\n                <div className='containter_'>\n                <Masonry\n                        breakpointCols={breakpoints}\n                        className=\"my-masonry-grid\"\n                        columnClassName=\"my-masonry-grid_column\"\n                    >\n                    {photo.photos.map(photo =>\n                        <div key={photo.id}> \n                            <img className='image_' photo={photo} src={process.env.REACT_APP_API_URL + photo.img}/>\n                        </div>\n                    )}\n                </Masonry>\n                </div>\n            </SRLWrapper>\n            </Row>\n        </Container>\n    );\n});\n\nexport default PhotoPage;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/pages/Home.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/ServiceList.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/Pages.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/TypeBar.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/oneItemInBasket.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/itemOneorderInAdmin.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreateService.js",["233"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Context} from \"../../index\";\nimport {Button, Col, Dropdown, Form, Modal, Row} from \"react-bootstrap\";\nimport {createService, fetchTypes} from \"../../http/serviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateService = observer(({show, onHide}) => {\n    const {service} = useContext(Context);\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState(0);\n    const [file, setFile] = useState(null);\n    const [info, setInfo] = useState([]);\n\n    useEffect(() => {\n        fetchTypes().then(data => service.setTypes(data));\n    }, []);\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}]);\n    };\n\n    const deleteInfo = (number) => {\n        setInfo(info.filter(item => item.number !== number));\n    };\n\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i));\n    };\n\n    const selectFile = e => {\n        setFile(e.target.files[0]);\n    };\n\n    const addService = () => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('description', description);\n        formData.append('price', `${price}`);\n        formData.append('img', file);\n        formData.append('typeId', service.selectedType.id);\n        formData.append('info', JSON.stringify(info));\n        createService(formData).then(() => onHide());\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    Добавить новую услугу\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{service.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {service.types.map(type =>\n                                <Dropdown.Item\n                                    key={type.id}\n                                    onClick={() => service.setSelectedType(type)}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название услуги...\"\n                    />\n                    <Form.Control\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите описание услуги...\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите цену услуги...\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant=\"outline-dark\"\n                        onClick={() => addInfo()}\n                    >\n                        Добавить новое поле\n                    </Button>\n                    {info.map(item =>\n                        <Row key={item.number} className=\"mt-3\">\n                            <Col md={4}>\n                                <Form.Control\n                                    placeholder=\"Введите заголовок...\"\n                                    value={item.title}\n                                    onChange={e => changeInfo('title', e.target.value, item.number)}\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    placeholder=\"Введите описание...\"\n                                    value={item.description}\n                                    onChange={e => changeInfo('description', e.target.value, item.number)}\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    variant=\"outline-danger\"\n                                    onClick={() => deleteInfo(item.number)}\n                                >\n                                    Удалить поле\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addService}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateService;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/CreateType.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/modals/DeleteType.js",["234"]," import React, {useEffect, useState} from 'react';\n import {Button, Dropdown, Modal} from \"react-bootstrap\";\n import {deleteType, fetchTypes} from \"../../http/serviceAPI\";\n\n const DeleteType = ({show, onHide, showSuccessMsgFunc}) => {\n    const [Type, setType] = useState(\"Тип\");\n    const [types, setTypes] = useState([]);\n    const [selectType, setSelectType] = useState({name: \"Тип не выбран\"});\n    const [showMsgErr, setShowMsgErr] = useState(false);\n    const [msgErr, setMsgErr] = useState('');\n\n    useEffect(() => {\n         fetchTypes().then(data => setTypes(data));\n     }, []);\n\n     const Delete = async () => {\n         if(Type === \"Тип\") {\n             if(selectType.name !== \"Тип не выбран\") {\n                 await deleteType(selectType.id).then(data => {\n                     showSuccessMsgFunc(data);\n                     onHide();\n                     setSelectType({name: \"Тип не выбран\"});\n                 });\n             } else {\n                 setMsgErr(\"Выберите тип\");\n                 setShowMsgErr(true);\n             }\n         }\n     };\n\n    useEffect(() => setShowMsgErr(false), [selectType, Type])\n\n     return (\n         <Modal\n             show={show}\n             onHide={onHide}\n             size=\"lg\"\n             centered\n         >\n             <Modal.Header closeButton>\n                 <Modal.Title>\n                    Удаление типа услуги\n                 </Modal.Title>\n             </Modal.Header>\n             <Modal.Body>\n                 {showMsgErr &&\n                     <>\n                         <p style={{color: \"red\", textAlign: \"center\"}}>{msgErr}</p>\n                     </>\n                 }\n\n                 Выберите тип {Type ===  \"Тип\"}\n                 <Dropdown className=\"mb-3\" style={{margin: \"0 auto\"}}>\n                     <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                         {Type}\n                     </Dropdown.Toggle>\n\n                     <Dropdown.Menu>\n                         {Type === \"Тип\"}\n                         {\n                             types.map(({id, name}) =>\n                                 selectType.name === name ? <Dropdown.Item disabled  key={id}>{name}</Dropdown.Item> : <Dropdown.Item  key={id} onClick={() => setSelectType({id, name})}>{name}</Dropdown.Item>\n                             )\n                         }\n\n                     </Dropdown.Menu>\n                 </Dropdown>\n\n             </Modal.Body>\n             <Modal.Footer>\n                 <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                 <Button variant=\"outline-success\" onClick={Delete}>Удалить</Button>\n             </Modal.Footer>\n         </Modal>\n     );\n };\n\n export default DeleteType;\n","/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/AlbumBar.js",[],"/Users/denismyachin/Documents/react_app/photographer-portfolio-site/front/src/components/serviceItem.js",[],{"ruleId":"235","severity":1,"message":"236","line":24,"column":8,"nodeType":"237","endLine":24,"endColumn":10,"suggestions":"238"},{"ruleId":"235","severity":1,"message":"239","line":63,"column":8,"nodeType":"237","endLine":63,"endColumn":13,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":26,"column":25,"nodeType":"243","messageId":"244","endLine":26,"endColumn":39},{"ruleId":"235","severity":1,"message":"245","line":52,"column":8,"nodeType":"237","endLine":52,"endColumn":21,"suggestions":"246"},{"ruleId":"235","severity":1,"message":"247","line":60,"column":8,"nodeType":"237","endLine":60,"endColumn":28,"suggestions":"248"},{"ruleId":"235","severity":1,"message":"249","line":107,"column":8,"nodeType":"237","endLine":107,"endColumn":57,"suggestions":"250"},{"ruleId":"241","severity":1,"message":"251","line":6,"column":18,"nodeType":"243","messageId":"244","endLine":6,"endColumn":26},{"ruleId":"241","severity":1,"message":"252","line":3,"column":17,"nodeType":"243","messageId":"244","endLine":3,"endColumn":20},{"ruleId":"241","severity":1,"message":"253","line":3,"column":45,"nodeType":"243","messageId":"244","endLine":3,"endColumn":48},{"ruleId":"235","severity":1,"message":"254","line":13,"column":8,"nodeType":"237","endLine":13,"endColumn":10,"suggestions":"255"},{"ruleId":"235","severity":1,"message":"256","line":17,"column":8,"nodeType":"237","endLine":17,"endColumn":10,"suggestions":"257"},{"ruleId":"235","severity":1,"message":"258","line":19,"column":8,"nodeType":"237","endLine":19,"endColumn":10,"suggestions":"259"},{"ruleId":"235","severity":1,"message":"258","line":34,"column":12,"nodeType":"237","endLine":34,"endColumn":48,"suggestions":"260"},{"ruleId":"241","severity":1,"message":"261","line":2,"column":9,"nodeType":"243","messageId":"244","endLine":2,"endColumn":16},{"ruleId":"241","severity":1,"message":"262","line":4,"column":22,"nodeType":"243","messageId":"244","endLine":4,"endColumn":40},{"ruleId":"235","severity":1,"message":"263","line":54,"column":8,"nodeType":"237","endLine":54,"endColumn":18,"suggestions":"264"},{"ruleId":"235","severity":1,"message":"265","line":54,"column":8,"nodeType":"237","endLine":54,"endColumn":21,"suggestions":"266"},{"ruleId":"235","severity":1,"message":"267","line":62,"column":8,"nodeType":"237","endLine":62,"endColumn":28,"suggestions":"268"},{"ruleId":"235","severity":1,"message":"254","line":20,"column":8,"nodeType":"237","endLine":20,"endColumn":10,"suggestions":"269"},{"ruleId":"235","severity":1,"message":"254","line":35,"column":12,"nodeType":"237","endLine":35,"endColumn":45,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":62,"column":29,"nodeType":"273","endLine":62,"endColumn":116},{"ruleId":"235","severity":1,"message":"258","line":17,"column":8,"nodeType":"237","endLine":17,"endColumn":10,"suggestions":"274"},{"ruleId":"241","severity":1,"message":"275","line":6,"column":18,"nodeType":"243","messageId":"244","endLine":6,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'feedback'. Either include it or remove the dependency array.","ArrayExpression",["276"],"React Hook useEffect has missing dependencies: 'photoCurr' and 'selectAlbum.name'. Either include them or remove the dependency array.",["277"],"no-unused-vars","'setSearchPhoto' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'filter' and 'searchPhoto'. Either include them or remove the dependency array.",["278"],"React Hook useEffect has a missing dependency: 'searchPhoto'. Either include it or remove the dependency array.",["279"],"React Hook useEffect has missing dependencies: 'checkInfo' and 'serviceCurr'. Either include them or remove the dependency array.",["280"],"'setAlbum' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'photo'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has missing dependencies: 'id' and 'order'. Either include them or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'service'. Either include it or remove the dependency array.",["283"],["284"],"'NavLink' is defined but never used.","'REGISTRATION_ROUTE' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage' and 'filter'. Either include them or remove the dependency array.",["285"],"React Hook useEffect has missing dependencies: 'filter' and 'searchService'. Either include them or remove the dependency array.",["286"],"React Hook useEffect has a missing dependency: 'searchService'. Either include it or remove the dependency array.",["287"],["288"],["289"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["290"],"'setType' is assigned a value but never used.",{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"301","fix":"315"},{"desc":"316","fix":"317"},{"desc":"305","fix":"318"},"Update the dependencies array to be: [feedback]",{"range":"319","text":"320"},"Update the dependencies array to be: [img, photoCurr, selectAlbum.name]",{"range":"321","text":"322"},"Update the dependencies array to be: [currentPage, filter, searchPhoto]",{"range":"323","text":"324"},"Update the dependencies array to be: [filter, searchPhoto, successMsg]",{"range":"325","text":"326"},"Update the dependencies array to be: [name, description, selectType, price, img, info, serviceCurr, checkInfo]",{"range":"327","text":"328"},"Update the dependencies array to be: [photo]",{"range":"329","text":"330"},"Update the dependencies array to be: [id, order]",{"range":"331","text":"332"},"Update the dependencies array to be: [service]",{"range":"333","text":"334"},"Update the dependencies array to be: [service, service.page, service.selectedType]",{"range":"335","text":"336"},"Update the dependencies array to be: [currentPage, filter, rerender]",{"range":"337","text":"338"},"Update the dependencies array to be: [currentPage, filter, searchService]",{"range":"339","text":"340"},"Update the dependencies array to be: [filter, searchService, successMsg]",{"range":"341","text":"342"},{"range":"343","text":"330"},"Update the dependencies array to be: [photo, photo.page, photo.selectedAlbum]",{"range":"344","text":"345"},{"range":"346","text":"334"},[634,636],"[feedback]",[2051,2056],"[img, photoCurr, selectAlbum.name]",[1790,1803],"[currentPage, filter, searchPhoto]",[2024,2044],"[filter, searchPhoto, successMsg]",[3530,3579],"[name, description, selectType, price, img, info, serviceCurr, checkInfo]",[502,504],"[photo]",[547,549],"[id, order]",[695,697],"[service]",[1293,1329],"[service, service.page, service.selectedType]",[1703,1713],"[currentPage, filter, rerender]",[1836,1849],"[currentPage, filter, searchService]",[2076,2096],"[filter, searchService, successMsg]",[714,716],[1287,1320],"[photo, photo.page, photo.selectedAlbum]",[692,694]]